{"version":3,"file":"colorToRgba.js","sourceRoot":"","sources":["../../src/colorToRgba.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAA;AAEjD,MAAM,UAAU,WAAW,CAAC,KAAa;IACvC,IAAI,UAAU,GAAG,cAAc,CAAC,KAAK,CAAC,CAAA;IACtC,IAAI,UAAU,KAAK,IAAI;QAAE,OAAO,KAAK,CAAA;IACrC,UAAU,GAAG,UAAU,IAAI,CAAC,CAAA;IAC5B,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,CAAA;IACxC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,CAAA;IACxC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,CAAA;IACvC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,GAAG,CAAA;IACvC,OAAO,UAAQ,CAAC,UAAK,CAAC,UAAK,CAAC,UAAK,CAAC,MAAG,CAAA;AACvC,CAAC","sourcesContent":["import { normalizeColor } from './normalizeColor'\n\nexport function colorToRgba(input: string) {\n  let int32Color = normalizeColor(input)\n  if (int32Color === null) return input\n  int32Color = int32Color || 0\n  let r = (int32Color & 0xff000000) >>> 24\n  let g = (int32Color & 0x00ff0000) >>> 16\n  let b = (int32Color & 0x0000ff00) >>> 8\n  let a = (int32Color & 0x000000ff) / 255\n  return `rgba(${r}, ${g}, ${b}, ${a})`\n}\n"]}