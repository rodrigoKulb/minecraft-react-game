{"version":3,"file":"globals.js","sourceRoot":"","sources":["../../src/globals.ts"],"names":[],"mappings":";;AAIA,yCAAwD;AACxD,qCAAgC;AAUrB,QAAA,SAAS,GAAG,IAAI,qBAAS,EAAE,CAAA;AAa3B,QAAA,GAAG,GAAG,cAAM,OAAA,WAAW,CAAC,GAAG,EAAE,EAAjB,CAAiB,CAAA;AAE7B,QAAA,UAAU,GAAG,IAAwC,CAAA;AAErD,QAAA,aAAa,GAAG,KAAgB,CAAA;AAMhC,QAAA,qBAAqB,GAC9B,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,cAAM,OAAA,CAAC,CAAC,EAAF,CAAE,CAAA;AAE9D,QAAA,cAAc,GAAG,UAAC,QAAoB,IAAK,OAAA,QAAQ,EAAE,EAAV,CAAU,CAAA;AAErD,QAAA,WAAW,GAA4C,cAAI,CAAA;AA2BzD,QAAA,MAAM,GAAG,UAAC,OAAwB;;IAC7C,OAAA,CAAC;;;;;;;;;;6BAuBA,EAtBC,kBAAE,EACF,oBAAG,EACH,gCAAS,EACT,kCAAU,EACV,wCAAa,EACb,8DAAwB,EACxB,wDAAqB,EACrB,0CAAc,EACd,oCAAW,KAcX;AAvBF,CAuBE,CAAA;AAEJ,0BAA0B;AAC1B,SAAS,YAAY,CAAC,OAAY;IAChC,IAAM,OAAO,GAAQ,EAAE,CAAA;IACvB,KAAK,IAAM,GAAG,IAAI,OAAO,EAAE;QACzB,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,SAAS;YAAE,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAA;KAC5D;IACD,OAAO,OAAO,CAAA;AAChB,CAAC","sourcesContent":["import { FluidValue } from 'fluids'\n\nimport { OneOrMore } from './types.util'\nimport { InterpolatorConfig, InterpolatorArgs } from './types'\nimport { FrameLoop, OpaqueAnimation } from './FrameLoop'\nimport { noop } from './helpers'\n\n//\n// Required\n//\n\nexport let createStringInterpolator: (\n  config: InterpolatorConfig<string>\n) => (input: number) => string\n\nexport let frameLoop = new FrameLoop()\n\n//\n// Optional\n//\n\nexport let to: <In, Out>(\n  source: OneOrMore<FluidValue>,\n  args: InterpolatorArgs<In, Out>\n) => FluidValue<Out>\n\ndeclare const performance: { now: () => number }\n\nexport let now = () => performance.now()\n\nexport let colorNames = null as { [key: string]: number } | null\n\nexport let skipAnimation = false as boolean\n\ndeclare const window: {\n  requestAnimationFrame: (cb: (time: number) => void) => number\n}\n\nexport let requestAnimationFrame: (cb: (time: number) => void) => void =\n  typeof window !== 'undefined' ? window.requestAnimationFrame : () => -1\n\nexport let batchedUpdates = (callback: () => void) => callback()\n\nexport let willAdvance: (animations: OpaqueAnimation[]) => void = noop\n\n//\n// Configuration\n//\n\nexport interface AnimatedGlobals {\n  /** Returns a new `Interpolation` object */\n  to?: typeof to\n  /** Used to measure frame length. Read more [here](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now) */\n  now?: typeof now\n  /** Provide a custom `FrameLoop` instance */\n  frameLoop?: typeof frameLoop\n  /** Provide custom color names for interpolation */\n  colorNames?: typeof colorNames\n  /** Make all animations instant and skip the frameloop entirely */\n  skipAnimation?: typeof skipAnimation\n  /** Provide custom logic for string interpolation */\n  createStringInterpolator?: typeof createStringInterpolator\n  /** Schedule a function to run on the next frame */\n  requestAnimationFrame?: typeof requestAnimationFrame\n  /** Event props are called with `batchedUpdates` to reduce extraneous renders */\n  batchedUpdates?: typeof batchedUpdates\n  /** @internal Exposed for testing purposes */\n  willAdvance?: typeof willAdvance\n}\n\nexport const assign = (globals: AnimatedGlobals): AnimatedGlobals =>\n  ({\n    to,\n    now,\n    frameLoop,\n    colorNames,\n    skipAnimation,\n    createStringInterpolator,\n    requestAnimationFrame,\n    batchedUpdates,\n    willAdvance,\n  } = Object.assign(\n    {\n      to,\n      now,\n      frameLoop,\n      colorNames,\n      skipAnimation,\n      createStringInterpolator,\n      requestAnimationFrame,\n      batchedUpdates,\n      willAdvance,\n    },\n    pluckDefined(globals)\n  ))\n\n// Ignore undefined values\nfunction pluckDefined(globals: any) {\n  const defined: any = {}\n  for (const key in globals) {\n    if (globals[key] !== undefined) defined[key] = globals[key]\n  }\n  return defined\n}\n"]}