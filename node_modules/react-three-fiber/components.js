export { OmitByValue } from 'utility-types';

const WebGLMultisampleRenderTarget = 'webGLMultisampleRenderTarget';
const WebGLRenderTarget = 'webGLRenderTarget';
const WebGLRenderer = 'webGLRenderer';
const FogExp2 = 'fogExp2';
const Fog = 'fog';
const Scene = 'scene';
const Sprite = 'sprite';
const LOD = 'lOD';
const SkinnedMesh = 'skinnedMesh';
const Skeleton = 'skeleton';
const Bone = 'bone';
const Mesh = 'mesh';
const LineSegments = 'lineSegments';
const LineLoop = 'lineLoop';
const Line = 'line';
const Points = 'points';
const Group = 'group';
const VideoTexture = 'videoTexture';
const DataTexture = 'dataTexture';
const DataTexture3D = 'dataTexture3D';
const CompressedTexture = 'compressedTexture';
const CubeTexture = 'cubeTexture';
const CanvasTexture = 'canvasTexture';
const DepthTexture = 'depthTexture';
const Texture = 'texture';
const WireframeGeometry = 'wireframeGeometry';
const ParametricBufferGeometry = 'parametricBufferGeometry';
const ParametricGeometry = 'parametricGeometry';
const TetrahedronBufferGeometry = 'tetrahedronBufferGeometry';
const TetrahedronGeometry = 'tetrahedronGeometry';
const OctahedronBufferGeometry = 'octahedronBufferGeometry';
const OctahedronGeometry = 'octahedronGeometry';
const IcosahedronBufferGeometry = 'icosahedronBufferGeometry';
const IcosahedronGeometry = 'icosahedronGeometry';
const DodecahedronBufferGeometry = 'dodecahedronBufferGeometry';
const DodecahedronGeometry = 'dodecahedronGeometry';
const PolyhedronBufferGeometry = 'polyhedronBufferGeometry';
const PolyhedronGeometry = 'polyhedronGeometry';
const TubeBufferGeometry = 'tubeBufferGeometry';
const TubeGeometry = 'tubeGeometry';
const TorusKnotBufferGeometry = 'torusKnotBufferGeometry';
const TorusKnotGeometry = 'torusKnotGeometry';
const TorusBufferGeometry = 'torusBufferGeometry';
const TorusGeometry = 'torusGeometry';
const TextBufferGeometry = 'textBufferGeometry';
const TextGeometry = 'textGeometry';
const SphereBufferGeometry = 'sphereBufferGeometry';
const SphereGeometry = 'sphereGeometry';
const RingBufferGeometry = 'ringBufferGeometry';
const RingGeometry = 'ringGeometry';
const PlaneBufferGeometry = 'planeBufferGeometry';
const PlaneGeometry = 'planeGeometry';
const LatheBufferGeometry = 'latheBufferGeometry';
const LatheGeometry = 'latheGeometry';
const ShapeBufferGeometry = 'shapeBufferGeometry';
const ShapeGeometry = 'shapeGeometry';
const ExtrudeBufferGeometry = 'extrudeBufferGeometry';
const ExtrudeGeometry = 'extrudeGeometry';
const EdgesGeometry = 'edgesGeometry';
const ConeBufferGeometry = 'coneBufferGeometry';
const ConeGeometry = 'coneGeometry';
const CylinderBufferGeometry = 'cylinderBufferGeometry';
const CylinderGeometry = 'cylinderGeometry';
const CircleBufferGeometry = 'circleBufferGeometry';
const CircleGeometry = 'circleGeometry';
const BoxBufferGeometry = 'boxBufferGeometry';
const BoxGeometry = 'boxGeometry';
const ShadowMaterial = 'shadowMaterial';
const SpriteMaterial = 'spriteMaterial';
const RawShaderMaterial = 'rawShaderMaterial';
const ShaderMaterial = 'shaderMaterial';
const MultiMaterial = 'multiMaterial';
const PointsMaterial = 'pointsMaterial';
const MeshPhysicalMaterial = 'meshPhysicalMaterial';
const MeshStandardMaterial = 'meshStandardMaterial';
const MeshPhongMaterial = 'meshPhongMaterial';
const MeshToonMaterial = 'meshToonMaterial';
const MeshNormalMaterial = 'meshNormalMaterial';
const MeshLambertMaterial = 'meshLambertMaterial';
const MeshDepthMaterial = 'meshDepthMaterial';
const MeshDistanceMaterial = 'meshDistanceMaterial';
const MeshBasicMaterial = 'meshBasicMaterial';
const MeshMatcapMaterial = 'meshMatcapMaterial';
const LineDashedMaterial = 'lineDashedMaterial';
const LineBasicMaterial = 'lineBasicMaterial';
const Material = 'material';
const AnimationLoader = 'animationLoader';
const CompressedTextureLoader = 'compressedTextureLoader';
const DataTextureLoader = 'dataTextureLoader';
const CubeTextureLoader = 'cubeTextureLoader';
const TextureLoader = 'textureLoader';
const ObjectLoader = 'objectLoader';
const MaterialLoader = 'materialLoader';
const BufferGeometryLoader = 'bufferGeometryLoader';
const LoadingManager = 'loadingManager';
const ImageLoader = 'imageLoader';
const ImageBitmapLoader = 'imageBitmapLoader';
const FontLoader = 'fontLoader';
const FileLoader = 'fileLoader';
const Loader = 'loader';
const LoaderUtils = 'loaderUtils';
const AudioLoader = 'audioLoader';
const SpotLightShadow = 'spotLightShadow';
const SpotLight = 'spotLight';
const PointLightShadow = 'pointLightShadow';
const PointLight = 'pointLight';
const RectAreaLight = 'rectAreaLight';
const HemisphereLight = 'hemisphereLight';
const DirectionalLightShadow = 'directionalLightShadow';
const DirectionalLight = 'directionalLight';
const AmbientLight = 'ambientLight';
const LightShadow = 'lightShadow';
const Light = 'light';
const AmbientLightProbe = 'ambientLightProbe';
const HemisphereLightProbe = 'hemisphereLightProbe';
const LightProbe = 'lightProbe';
const StereoCamera = 'stereoCamera';
const PerspectiveCamera = 'perspectiveCamera';
const OrthographicCamera = 'orthographicCamera';
const CubeCamera = 'cubeCamera';
const ArrayCamera = 'arrayCamera';
const Camera = 'camera';
const AudioListener = 'audioListener';
const PositionalAudio = 'positionalAudio';
const AudioAnalyser = 'audioAnalyser';
const Audio = 'audio';
const VectorKeyframeTrack = 'vectorKeyframeTrack';
const StringKeyframeTrack = 'stringKeyframeTrack';
const QuaternionKeyframeTrack = 'quaternionKeyframeTrack';
const NumberKeyframeTrack = 'numberKeyframeTrack';
const ColorKeyframeTrack = 'colorKeyframeTrack';
const BooleanKeyframeTrack = 'booleanKeyframeTrack';
const PropertyMixer = 'propertyMixer';
const PropertyBinding = 'propertyBinding';
const KeyframeTrack = 'keyframeTrack';
const AnimationObjectGroup = 'animationObjectGroup';
const AnimationMixer = 'animationMixer';
const AnimationClip = 'animationClip';
const AnimationAction = 'animationAction';
const Uniform = 'uniform';
const InstancedBufferGeometry = 'instancedBufferGeometry';
const BufferGeometry = 'bufferGeometry';
const Geometry = 'geometry';
const InterleavedBufferAttribute = 'interleavedBufferAttribute';
const InstancedInterleavedBuffer = 'instancedInterleavedBuffer';
const InterleavedBuffer = 'interleavedBuffer';
const InstancedBufferAttribute = 'instancedBufferAttribute';
const BufferAttribute = 'bufferAttribute';
const Int8Attribute = 'int8Attribute';
const Uint8Attribute = 'uint8Attribute';
const Uint8ClampedAttribute = 'uint8ClampedAttribute';
const Int16Attribute = 'int16Attribute';
const Uint16Attribute = 'uint16Attribute';
const Int32Attribute = 'int32Attribute';
const Uint32Attribute = 'uint32Attribute';
const Float32Attribute = 'float32Attribute';
const Float64Attribute = 'float64Attribute';
const Int8BufferAttribute = 'int8BufferAttribute';
const Uint8BufferAttribute = 'uint8BufferAttribute';
const Uint8ClampedBufferAttribute = 'uint8ClampedBufferAttribute';
const Int16BufferAttribute = 'int16BufferAttribute';
const Uint16BufferAttribute = 'uint16BufferAttribute';
const Int32BufferAttribute = 'int32BufferAttribute';
const Uint32BufferAttribute = 'uint32BufferAttribute';
const Float32BufferAttribute = 'float32BufferAttribute';
const Float64BufferAttribute = 'float64BufferAttribute';
const Face3 = 'face3';
const Object3D = 'object3D';
const Raycaster = 'raycaster';
const Layers = 'layers';
const EventDispatcher = 'eventDispatcher';
const DirectGeometry = 'directGeometry';
const Clock = 'clock';
const QuaternionLinearInterpolant = 'quaternionLinearInterpolant';
const LinearInterpolant = 'linearInterpolant';
const DiscreteInterpolant = 'discreteInterpolant';
const CubicInterpolant = 'cubicInterpolant';
const Triangle = 'triangle';
const Spherical = 'spherical';
const Cylindrical = 'cylindrical';
const Plane = 'plane';
const Frustum = 'frustum';
const Sphere = 'sphere';
const Ray = 'ray';
const Matrix4 = 'matrix4';
const Matrix3 = 'matrix3';
const Box3 = 'box3';
const Box2 = 'box2';
const Line3 = 'line3';
const Euler = 'euler';
const Vector4 = 'vector4';
const Vector3 = 'vector3';
const Vector2 = 'vector2';
const Quaternion = 'quaternion';
const Color = 'color';
const SphericalHarmonics3 = 'sphericalHarmonics3';
const ImmediateRenderObject = 'immediateRenderObject';
const SpotLightHelper = 'spotLightHelper';
const SkeletonHelper = 'skeletonHelper';
const PointLightHelper = 'pointLightHelper';
const HemisphereLightHelper = 'hemisphereLightHelper';
const GridHelper = 'gridHelper';
const PolarGridHelper = 'polarGridHelper';
const DirectionalLightHelper = 'directionalLightHelper';
const CameraHelper = 'cameraHelper';
const BoxHelper = 'boxHelper';
const Box3Helper = 'box3Helper';
const PlaneHelper = 'planeHelper';
const ArrowHelper = 'arrowHelper';
const AxesHelper = 'axesHelper';
const ArcCurve = 'arcCurve';
const CatmullRomCurve3 = 'catmullRomCurve3';
const CubicBezierCurve = 'cubicBezierCurve';
const CubicBezierCurve3 = 'cubicBezierCurve3';
const EllipseCurve = 'ellipseCurve';
const LineCurve = 'lineCurve';
const LineCurve3 = 'lineCurve3';
const QuadraticBezierCurve = 'quadraticBezierCurve';
const QuadraticBezierCurve3 = 'quadraticBezierCurve3';
const SplineCurve = 'splineCurve';
const Shape = 'shape';
const Path = 'path';
const ShapePath = 'shapePath';
const Font = 'font';
const CurvePath = 'curvePath';
const Curve = 'curve';
const WebGLBufferRenderer = 'webGLBufferRenderer';
const WebGLCapabilities = 'webGLCapabilities';
const WebGLClipping = 'webGLClipping';
const WebGLExtensions = 'webGLExtensions';
const WebGLGeometries = 'webGLGeometries';
const WebGLIndexedBufferRenderer = 'webGLIndexedBufferRenderer';
const WebGLInfo = 'webGLInfo';
const WebGLLights = 'webGLLights';
const WebGLObjects = 'webGLObjects';
const WebGLProgram = 'webGLProgram';
const WebGLPrograms = 'webGLPrograms';
const WebGLProperties = 'webGLProperties';
const WebGLRenderList = 'webGLRenderList';
const WebGLRenderLists = 'webGLRenderLists';
const WebGLShader = 'webGLShader';
const WebGLShadowMap = 'webGLShadowMap';
const WebGLColorBuffer = 'webGLColorBuffer';
const WebGLDepthBuffer = 'webGLDepthBuffer';
const WebGLStencilBuffer = 'webGLStencilBuffer';
const WebGLState = 'webGLState';
const WebGLTextures = 'webGLTextures';
const WebGLUniforms = 'webGLUniforms';

const Primitive = 'primitive';
const New = 'new';

export { AmbientLight, AmbientLightProbe, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioListener, AudioLoader, AxesHelper, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, Camera, CameraHelper, CanvasTexture, CatmullRomCurve3, CircleBufferGeometry, CircleGeometry, Clock, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeTexture, CubeTextureLoader, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, Curve, CurvePath, CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture3D, DataTextureLoader, DepthTexture, DirectGeometry, DirectionalLight, DirectionalLightHelper, DirectionalLightShadow, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, EdgesGeometry, EllipseCurve, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, Face3, FileLoader, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, Fog, FogExp2, Font, FontLoader, Frustum, Geometry, GridHelper, Group, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImmediateRenderObject, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, Light, LightProbe, LightShadow, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearInterpolant, Loader, LoaderUtils, LoadingManager, Material, MaterialLoader, Matrix3, Matrix4, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MultiMaterial, New, NumberKeyframeTrack, Object3D, ObjectLoader, OctahedronBufferGeometry, OctahedronGeometry, OrthographicCamera, ParametricBufferGeometry, ParametricGeometry, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, PointLightShadow, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, Primitive, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RingBufferGeometry, RingGeometry, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, Skeleton, SkeletonHelper, SkinnedMesh, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, SpotLightShadow, Sprite, SpriteMaterial, StereoCamera, StringKeyframeTrack, TetrahedronBufferGeometry, TetrahedronGeometry, TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TubeBufferGeometry, TubeGeometry, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGLBufferRenderer, WebGLCapabilities, WebGLClipping, WebGLColorBuffer, WebGLDepthBuffer, WebGLExtensions, WebGLGeometries, WebGLIndexedBufferRenderer, WebGLInfo, WebGLLights, WebGLMultisampleRenderTarget, WebGLObjects, WebGLProgram, WebGLPrograms, WebGLProperties, WebGLRenderList, WebGLRenderLists, WebGLRenderTarget, WebGLRenderer, WebGLShader, WebGLShadowMap, WebGLState, WebGLStencilBuffer, WebGLTextures, WebGLUniforms, WireframeGeometry };
