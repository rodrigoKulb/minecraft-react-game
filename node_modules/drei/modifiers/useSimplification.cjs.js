'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var THREE = require('three');
var SimplifyModifier = require('three/examples/jsm/modifiers/SimplifyModifier');

function useSimplification(simplePercent) {
  var ref = React.useRef();
  var original = React.useRef();
  var modifier = React.useRef();
  React.useEffect(function () {
    if (!original.current) {
      original.current = ref.current.geometry.clone();
      modifier.current = new SimplifyModifier.SimplifyModifier();
    }
  }, []);
  React.useEffect(function () {
    if (original.current && ref.current) {
      var geometry = new THREE.BufferGeometry();

      if (original.current instanceof THREE.BufferGeometry) {
        geometry = original.current.clone();
      } else {
        geometry = geometry.fromGeometry(original.current);
      }

      var count = Math.floor(geometry.attributes.position.count * simplePercent); // number of vertices to remove

      ref.current.geometry = modifier.current.modify(geometry, count);
    }
  }, [simplePercent]);
  return ref;
}

exports.useSimplification = useSimplification;
