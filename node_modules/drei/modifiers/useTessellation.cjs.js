'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var THREE = require('three');
var TessellateModifier = require('three/examples/jsm/modifiers/TessellateModifier');

function useTessellation(passes, maxEdgeLength) {
  if (passes === void 0) {
    passes = 3;
  }

  var ref = React.useRef();
  var original = React.useRef();
  var modifier = React.useRef();
  React.useEffect(function () {
    if (!original.current) {
      original.current = ref.current.geometry.clone();
      modifier.current = new TessellateModifier.TessellateModifier(parseInt(maxEdgeLength));
    }
  }, [maxEdgeLength]);
  React.useEffect(function () {
    modifier.current.maxEdgeLength = maxEdgeLength;
  }, [maxEdgeLength]);
  React.useEffect(function () {
    if (original.current && ref.current) {
      var geometry = new THREE.Geometry();

      if (original.current instanceof THREE.BufferGeometry) {
        geometry.fromBufferGeometry(original.current);
      } else {
        geometry = original.current.clone();
      }

      var bufferGeometry = new THREE.BufferGeometry();

      for (var i = 0; i < passes; i++) {
        modifier.current.modify(geometry);
      }

      var tessellated = bufferGeometry.fromGeometry(geometry);
      ref.current.geometry = tessellated;
    }
  }, [maxEdgeLength, passes]);
  return ref;
}

exports.useTessellation = useTessellation;
