'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime/helpers/extends');
var _objectWithoutPropertiesLoose = require('@babel/runtime/helpers/objectWithoutPropertiesLoose');
var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);
var _objectWithoutPropertiesLoose__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutPropertiesLoose);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function create(type) {
  var El = type + 'BufferGeometry';
  return /*#__PURE__*/React.forwardRef(function (_ref, ref) {
    var args = _ref.args,
        children = _ref.children,
        props = _objectWithoutPropertiesLoose__default['default'](_ref, ["args", "children"]);

    return /*#__PURE__*/React__default['default'].createElement("mesh", _extends__default['default']({
      ref: ref
    }, props), /*#__PURE__*/React__default['default'].createElement(El, {
      attach: "geometry",
      args: args
    }), children);
  });
}

var Box = create('box');
var Circle = create('circle');
var Cone = create('cone');
var Cylinder = create('cylinder');
var Sphere = create('sphere');
var Plane = create('plane');
var Tube = create('tube');
var Torus = create('torus');
var TorusKnot = create('torusKnot');
var Tetrahedron = create('tetrahedron');
var Ring = create('ring');
var Polyhedron = create('polyhedron');
var Icosahedron = create('icosahedron');
var Octahedron = create('octahedron');
var Dodecahedron = create('dodecahedron');
var Extrude = create('extrude');
var Lathe = create('lathe');
var Parametric = create('parametric');

exports.Box = Box;
exports.Circle = Circle;
exports.Cone = Cone;
exports.Cylinder = Cylinder;
exports.Dodecahedron = Dodecahedron;
exports.Extrude = Extrude;
exports.Icosahedron = Icosahedron;
exports.Lathe = Lathe;
exports.Octahedron = Octahedron;
exports.Parametric = Parametric;
exports.Plane = Plane;
exports.Polyhedron = Polyhedron;
exports.Ring = Ring;
exports.Sphere = Sphere;
exports.Tetrahedron = Tetrahedron;
exports.Torus = Torus;
exports.TorusKnot = TorusKnot;
exports.Tube = Tube;
