'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime/helpers/extends');
var _objectWithoutPropertiesLoose = require('@babel/runtime/helpers/objectWithoutPropertiesLoose');
var React = require('react');
var THREE = require('three');
var LineGeometry = require('three/examples/jsm/lines/LineGeometry');
var LineMaterial = require('three/examples/jsm/lines/LineMaterial');
var Line2 = require('three/examples/jsm/lines/Line2');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);
var _objectWithoutPropertiesLoose__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutPropertiesLoose);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var Line = /*#__PURE__*/React__default['default'].forwardRef(function Line(_ref, ref) {
  var points = _ref.points,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'black' : _ref$color,
      vertexColors = _ref.vertexColors,
      lineWidth = _ref.lineWidth,
      dashed = _ref.dashed,
      rest = _objectWithoutPropertiesLoose__default['default'](_ref, ["points", "color", "vertexColors", "lineWidth", "dashed"]);

  var _useState = React.useState(function () {
    return new Line2.Line2();
  }),
      line2 = _useState[0];

  var _useState2 = React.useState(function () {
    return new LineGeometry.LineGeometry();
  }),
      lineGeometry = _useState2[0];

  var _useState3 = React.useState(function () {
    return new LineMaterial.LineMaterial();
  }),
      lineMaterial = _useState3[0];

  var resolution = React.useMemo(function () {
    return new THREE.Vector2(512, 512);
  }, []);
  React.useEffect(function () {
    lineGeometry.setPositions(points.flat());
    if (vertexColors) lineGeometry.setColors(vertexColors.flat());
    line2.computeLineDistances();
  }, [points, vertexColors, line2, lineGeometry]);
  React.useLayoutEffect(function () {
    if (dashed) {
      lineMaterial.defines.USE_DASH = '';
    } else {
      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.
      delete lineMaterial.defines.USE_DASH;
    }

    lineMaterial.needsUpdate = true;
  }, [dashed, lineMaterial]);
  return /*#__PURE__*/React__default['default'].createElement("primitive", _extends__default['default']({
    dispose: null,
    object: line2,
    ref: ref
  }, rest), /*#__PURE__*/React__default['default'].createElement("primitive", {
    dispose: null,
    object: lineGeometry,
    attach: "geometry"
  }), /*#__PURE__*/React__default['default'].createElement("primitive", _extends__default['default']({
    dispose: null,
    object: lineMaterial,
    attach: "material",
    color: color,
    vertexColors: Boolean(vertexColors),
    resolution: resolution,
    linewidth: lineWidth,
    dashed: dashed
  }, rest)));
});

exports.Line = Line;
