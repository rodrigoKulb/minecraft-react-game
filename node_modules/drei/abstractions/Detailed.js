import _extends from '@babel/runtime/helpers/esm/extends';
import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
import React, { forwardRef } from 'react';
import { useUpdate, useFrame } from 'react-three-fiber';
import mergeRefs from 'react-merge-refs';

const Detailed = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    children,
    distances
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "distances"]);

  const lod = useUpdate(lod => {
    lod.levels.length = 0;
    lod.children.forEach((object, index) => lod.levels.push({
      object,
      distance: distances[index]
    }));
  }, []);
  useFrame(state => {
    var _lod$current;

    return (_lod$current = lod.current) == null ? void 0 : _lod$current.update(state.camera);
  });
  return /*#__PURE__*/React.createElement("lOD", _extends({
    ref: mergeRefs([lod, ref])
  }, props), children);
});

export { Detailed };
