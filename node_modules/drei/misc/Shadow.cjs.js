'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime/helpers/extends');
var _objectWithoutPropertiesLoose = require('@babel/runtime/helpers/objectWithoutPropertiesLoose');
var React = require('react');
var THREE = require('three');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);
var _objectWithoutPropertiesLoose__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutPropertiesLoose);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var Shadow = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$fog = _ref.fog,
      fog = _ref$fog === void 0 ? false : _ref$fog,
      _ref$colorStop = _ref.colorStop,
      colorStop = _ref$colorStop === void 0 ? 0.0 : _ref$colorStop,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'black' : _ref$color,
      _ref$opacity = _ref.opacity,
      opacity = _ref$opacity === void 0 ? 0.5 : _ref$opacity,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["fog", "colorStop", "color", "opacity"]);

  var canvas = React.useMemo(function () {
    var canvas = document.createElement('canvas');
    canvas.width = 128;
    canvas.height = 128;
    var context = canvas.getContext('2d');
    var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);
    gradient.addColorStop(colorStop, new THREE.Color(color).getStyle());
    gradient.addColorStop(1, 'rgba(0,0,0,0)');
    context.fillStyle = gradient;
    context.fillRect(0, 0, canvas.width, canvas.height);
    return canvas;
  }, [color, colorStop]);
  return /*#__PURE__*/React__default['default'].createElement("mesh", _extends__default['default']({
    ref: ref
  }, props), /*#__PURE__*/React__default['default'].createElement("planeBufferGeometry", {
    attach: "geometry",
    args: [1, 1]
  }), /*#__PURE__*/React__default['default'].createElement("meshBasicMaterial", {
    attach: "material",
    transparent: true,
    opacity: opacity,
    fog: fog
  }, /*#__PURE__*/React__default['default'].createElement("canvasTexture", {
    attach: "map",
    args: [canvas]
  })));
});

exports.Shadow = Shadow;
