import _extends from '@babel/runtime/helpers/esm/extends';
import React, { forwardRef, useMemo, useEffect } from 'react';
import { useThree } from 'react-three-fiber';
import { PointerLockControls as PointerLockControls$1 } from 'three/examples/jsm/controls/PointerLockControls';

const PointerLockControls = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    camera,
    gl,
    invalidate
  } = useThree();
  const controls = useMemo(() => new PointerLockControls$1(camera, gl.domElement), [camera, gl.domElement]);
  useEffect(() => {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
  }, [controls, invalidate]);
  useEffect(() => {
    const handler = () => controls.lock();

    document.addEventListener('click', handler);
    return () => document.removeEventListener('click', handler);
  }, [controls]);
  return /*#__PURE__*/React.createElement("primitive", _extends({
    dispose: null,
    object: controls,
    ref: ref
  }, props));
});

export { PointerLockControls };
