'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime/helpers/extends');
var _objectWithoutPropertiesLoose = require('@babel/runtime/helpers/objectWithoutPropertiesLoose');
var React = require('react');
var reactThreeFiber = require('react-three-fiber');
var TransformControls$1 = require('three/examples/jsm/controls/TransformControls');
var pick = require('lodash.pick');
var omit = require('lodash.omit');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);
var _objectWithoutPropertiesLoose__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutPropertiesLoose);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var pick__default = /*#__PURE__*/_interopDefaultLegacy(pick);
var omit__default = /*#__PURE__*/_interopDefaultLegacy(omit);

var TransformControls = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      props = _objectWithoutPropertiesLoose__default['default'](_ref, ["children"]);

  var transformOnlyPropNames = ['enabled', 'axis', 'mode', 'translationSnap', 'rotationSnap', 'scaleSnap', 'space', 'size', 'dragging', 'showX', 'showY', 'showZ'];
  var transformProps = pick__default['default'](props, transformOnlyPropNames);
  var objectProps = omit__default['default'](props, transformOnlyPropNames);

  var _useThree = reactThreeFiber.useThree(),
      camera = _useThree.camera,
      gl = _useThree.gl,
      invalidate = _useThree.invalidate;

  var controls = React.useMemo(function () {
    return new TransformControls$1.TransformControls(camera, gl.domElement);
  }, [camera, gl.domElement]);
  var group = React.useRef();
  React.useLayoutEffect(function () {
    return void controls.attach(group.current);
  }, [children, controls]);
  React.useEffect(function () {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return function () {
      return controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
    };
  }, [controls, invalidate]);
  return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement("primitive", _extends__default['default']({
    dispose: null,
    object: controls,
    ref: ref
  }, transformProps)), /*#__PURE__*/React__default['default'].createElement("group", _extends__default['default']({
    ref: group
  }, objectProps), children));
});

exports.TransformControls = TransformControls;
