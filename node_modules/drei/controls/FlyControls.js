import _extends from '@babel/runtime/helpers/esm/extends';
import React, { forwardRef, useMemo, useEffect } from 'react';
import { useThree, useFrame } from 'react-three-fiber';
import { FlyControls as FlyControls$1 } from 'three/examples/jsm/controls/FlyControls';

const FlyControls = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    camera,
    gl,
    invalidate
  } = useThree();
  const controls = useMemo(() => new FlyControls$1(camera, gl.domElement), [camera, gl.domElement]);
  useEffect(() => {
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);
    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);
  }, [controls, invalidate]);
  useFrame((_, delta) => controls.update(delta));
  return /*#__PURE__*/React.createElement("primitive", _extends({
    dispose: null,
    object: controls,
    ref: ref
  }, props));
});

export { FlyControls };
