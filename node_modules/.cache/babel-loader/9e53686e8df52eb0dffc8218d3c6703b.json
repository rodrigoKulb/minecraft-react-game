{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useStore } from './useStore';\nimport andarSom from '../audio/andar.wav';\nimport jumpSom from '../audio/jump.wav';\n\nfunction actionByKey(key) {\n  const keys = {\n    KeyW: 'moveForward',\n    KeyS: 'moveBackward',\n    KeyA: 'moveLeft',\n    KeyD: 'moveRight',\n    Space: 'jump'\n  };\n  return keys[key];\n}\n\nfunction textureByKey(key) {\n  const keys = {\n    Digit1: 'dirt',\n    Digit2: 'grass',\n    Digit3: 'glass',\n    Digit4: 'wood',\n    Digit5: 'log',\n    Digit6: 'dirtgrass'\n  };\n  return keys[key];\n}\n\nexport const useKeyboardControls = () => {\n  useEffect(() => {\n    document.getElementsByClassName(\"botoes\")[0].addEventListener('click', () => {\n      alert('ok');\n    });\n  }, []);\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false\n  });\n  const [setTexture] = useStore(state => [state.setTexture]); //const [plaingCount,setPlaingCount] = useState(0);\n\n  const [playAndar] = useState(new Audio(andarSom));\n  const [playJump] = useState(new Audio(jumpSom));\n  let plaingCount = [];\n  plaingCount['KeyS'] = 0;\n  plaingCount['KeyA'] = 0;\n  plaingCount['KeyW'] = 0;\n  plaingCount['KeyD'] = 0;\n  let total = 0;\n  useEffect(() => {\n    const teclaKeyDown = e => {\n      if (e.code === 'Space') playJump.play();\n      plaingCount[e.code] = 1;\n      total = plaingCount['KeyS'] + plaingCount['KeyA'] + plaingCount['KeyW'] + plaingCount['KeyD'];\n\n      if (total > 0) {\n        playAndar.play();\n      }\n\n      for (var i = 0; i < plaingCount.length; i++) {\n        total += plaingCount[i];\n      }\n    };\n\n    const teclaKeyUp = e => {\n      plaingCount[e.code] = 0;\n      total = plaingCount['KeyS'] + plaingCount['KeyA'] + plaingCount['KeyW'] + plaingCount['KeyD'];\n\n      if (total === 0) {\n        playAndar.pause();\n      }\n    };\n\n    document.addEventListener('keydown', teclaKeyDown);\n    document.addEventListener('keyup', teclaKeyUp);\n    return () => {\n      document.removeEventListener('keydown', teclaKeyDown);\n      document.removeEventListener('keyup', teclaKeyUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Movement key\n      if (actionByKey(e.code)) {\n        setMovement(state => ({ ...state,\n          [actionByKey(e.code)]: true\n        }));\n      } // Change texture key\n\n\n      if (textureByKey(e.code)) {\n        setTexture(textureByKey(e.code));\n      }\n    };\n\n    const handleKeyUp = e => {\n      if (actionByKey(e.code)) {\n        setMovement(state => ({ ...state,\n          [actionByKey(e.code)]: false\n        }));\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [setTexture]);\n  return movement;\n};","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react/src/hooks/useKeyboardControls.js"],"names":["useState","useEffect","useStore","andarSom","jumpSom","actionByKey","key","keys","KeyW","KeyS","KeyA","KeyD","Space","textureByKey","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","useKeyboardControls","document","getElementsByClassName","addEventListener","alert","movement","setMovement","moveForward","moveBackward","moveLeft","moveRight","jump","setTexture","state","playAndar","Audio","playJump","plaingCount","total","teclaKeyDown","e","code","play","i","length","teclaKeyUp","pause","removeEventListener","handleKeyDown","handleKeyUp"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useStore } from './useStore';\nimport andarSom from '../audio/andar.wav';\nimport jumpSom from '../audio/jump.wav';\n\n\n\nfunction actionByKey(key) {\n  const keys = {\n    KeyW: 'moveForward',\n    KeyS: 'moveBackward',\n    KeyA: 'moveLeft',\n    KeyD: 'moveRight',\n    Space: 'jump',\n  };\n  return keys[key];\n}\n\n\n\n\nfunction textureByKey(key) {\n  const keys = {\n    Digit1: 'dirt',\n    Digit2: 'grass',\n    Digit3: 'glass',\n    Digit4: 'wood',\n    Digit5: 'log',\n    Digit6: 'dirtgrass',\n  };\n  return keys[key];\n}\nexport const useKeyboardControls = () => {\n\n  useEffect(() => {\n    document.getElementsByClassName(\"botoes\").[0].addEventListener('click', () => {\n      alert('ok');\n    });\n  }, []);\n\n\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false,\n  });\n\n  const [setTexture] = useStore((state) => [state.setTexture]);\n  //const [plaingCount,setPlaingCount] = useState(0);\n  const [playAndar] = useState(new Audio(andarSom));\n  const [playJump] = useState(new Audio(jumpSom));\n  \n\n  let plaingCount =  [];\n  plaingCount['KeyS'] = 0;\n  plaingCount['KeyA'] = 0;\n  plaingCount['KeyW'] = 0;\n  plaingCount['KeyD'] = 0;\n\n  let total = 0;\n  useEffect(() => {\n  \n    const teclaKeyDown = (e) => {\n      if(e.code==='Space')  playJump.play();\n      plaingCount[e.code] = 1;\n      total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n\n      if(total>0){\n        playAndar.play();\n      }\n      for ( var i = 0; i < plaingCount.length; i++ ){\n        total += plaingCount[i];\n \n     }\n    }\n    const teclaKeyUp = (e) => {\n      plaingCount[e.code] = 0;\n      total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n      \n      if(total===0){\n\n      playAndar.pause();\n     }\n    }\n    document.addEventListener('keydown', teclaKeyDown);\n    document.addEventListener('keyup', teclaKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', teclaKeyDown);\n      document.removeEventListener('keyup', teclaKeyUp);\n    };\n  }, []);\n\n\n  useEffect(() => {\n   \n    const handleKeyDown = (e) => {\n     \n      // Movement key\n      if (actionByKey(e.code)) {\n        setMovement((state) => ({\n          ...state,\n          [actionByKey(e.code)]: true,\n        }));\n      }\n      // Change texture key\n      if (textureByKey(e.code)) {\n        setTexture(textureByKey(e.code));\n      }\n    };\n    const handleKeyUp = (e) => {\n      \n      if (actionByKey(e.code)) {\n        setMovement((state) => ({\n          ...state,\n          [actionByKey(e.code)]: false,\n        }));\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [setTexture]);\n\n  return movement;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}