{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useStore } from './useStore';\nimport andarSom from '../audio/andar.wav';\n\nfunction actionByKey(key) {\n  const keys = {\n    KeyW: 'moveForward',\n    KeyS: 'moveBackward',\n    KeyA: 'moveLeft',\n    KeyD: 'moveRight',\n    Space: 'jump'\n  };\n  return keys[key];\n}\n\nfunction textureByKey(key) {\n  const keys = {\n    Digit1: 'dirt',\n    Digit2: 'grass',\n    Digit3: 'glass',\n    Digit4: 'wood',\n    Digit5: 'log',\n    Digit6: 'dirtgrass'\n  };\n  return keys[key];\n}\n\nexport const useKeyboardControls = () => {\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false\n  });\n  const [setTexture] = useStore(state => [state.setTexture]); //const [plaingCount,setPlaingCount] = useState(0);\n\n  const [play] = useState(new Audio(andarSom));\n  let plaingCount = [];\n  plaingCount['KeyS'] = 0;\n  plaingCount['KeyA'] = 0;\n  plaingCount['KeyW'] = 0;\n  plaingCount['KeyD'] = 0;\n  let total = 0;\n  useEffect(() => {\n    const teclaKeyDown = e => {\n      total = plaingCount['KeyS'] + plaingCount['KeyA'] + plaingCount['KeyW'] + plaingCount['KeyD'];\n      plaingCount[e.code] = 1;\n      console.log(total);\n\n      if (total === 0) {\n        play.play();\n      }\n\n      for (var i = 0; i < plaingCount.length; i++) {\n        total += plaingCount[i];\n        console.log(plaingCount[i]);\n      }\n    };\n\n    const teclaKeyUp = e => {\n      plaingCount[e.code] = 0;\n      total = plaingCount['KeyS'] + plaingCount['KeyA'] + plaingCount['KeyW'] + plaingCount['KeyD'];\n\n      if (total === 0) {\n        console.log(plaingCount[e.code]);\n        play.pause();\n      }\n    };\n\n    document.addEventListener('keydown', teclaKeyDown);\n    document.addEventListener('keyup', teclaKeyUp);\n    return () => {\n      document.removeEventListener('keydown', teclaKeyDown);\n      document.removeEventListener('keyup', teclaKeyUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Movement key\n      if (actionByKey(e.code)) {\n        setMovement(state => ({ ...state,\n          [actionByKey(e.code)]: true\n        }));\n      } // Change texture key\n\n\n      if (textureByKey(e.code)) {\n        setTexture(textureByKey(e.code));\n      }\n    };\n\n    const handleKeyUp = e => {\n      if (actionByKey(e.code)) {\n        setMovement(state => ({ ...state,\n          [actionByKey(e.code)]: false\n        }));\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [setTexture]);\n  return movement;\n};","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react/src/hooks/useKeyboardControls.js"],"names":["useState","useEffect","useStore","andarSom","actionByKey","key","keys","KeyW","KeyS","KeyA","KeyD","Space","textureByKey","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","useKeyboardControls","movement","setMovement","moveForward","moveBackward","moveLeft","moveRight","jump","setTexture","state","play","Audio","plaingCount","total","teclaKeyDown","e","code","console","log","i","length","teclaKeyUp","pause","document","addEventListener","removeEventListener","handleKeyDown","handleKeyUp"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useStore } from './useStore';\nimport andarSom from '../audio/andar.wav';\n\n\n\nfunction actionByKey(key) {\n  const keys = {\n    KeyW: 'moveForward',\n    KeyS: 'moveBackward',\n    KeyA: 'moveLeft',\n    KeyD: 'moveRight',\n    Space: 'jump',\n  };\n  return keys[key];\n}\n\n\n\n\nfunction textureByKey(key) {\n  const keys = {\n    Digit1: 'dirt',\n    Digit2: 'grass',\n    Digit3: 'glass',\n    Digit4: 'wood',\n    Digit5: 'log',\n    Digit6: 'dirtgrass',\n  };\n  return keys[key];\n}\nexport const useKeyboardControls = () => {\n\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false,\n  });\n\n  const [setTexture] = useStore((state) => [state.setTexture]);\n  //const [plaingCount,setPlaingCount] = useState(0);\n  const [play] = useState(new Audio(andarSom));\n \n  let plaingCount =  [];\n  plaingCount['KeyS'] = 0;\n  plaingCount['KeyA'] = 0;\n  plaingCount['KeyW'] = 0;\n  plaingCount['KeyD'] = 0;\n  let total = 0;\n  useEffect(() => {\n  \n    const teclaKeyDown = (e) => {\n\n      total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n      plaingCount[e.code] = 1;\n      console.log(total);\n      if(total===0)\n      {\n        play.play();\n       \n      }\n      for ( var i = 0; i < plaingCount.length; i++ ){\n        total += plaingCount[i];\n        console.log(plaingCount[i]);\n     }\n    }\n    const teclaKeyUp = (e) => {\n      plaingCount[e.code] = 0;\n      total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n      \n      if(total===0){\n      console.log( plaingCount[e.code]);\n      play.pause();\n    }\n    }\n    document.addEventListener('keydown', teclaKeyDown);\n    document.addEventListener('keyup', teclaKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', teclaKeyDown);\n      document.removeEventListener('keyup', teclaKeyUp);\n    };\n  }, []);\n\n\n  useEffect(() => {\n   \n    const handleKeyDown = (e) => {\n     \n      // Movement key\n      if (actionByKey(e.code)) {\n        setMovement((state) => ({\n          ...state,\n          [actionByKey(e.code)]: true,\n        }));\n      }\n      // Change texture key\n      if (textureByKey(e.code)) {\n        setTexture(textureByKey(e.code));\n      }\n    };\n    const handleKeyUp = (e) => {\n      \n      if (actionByKey(e.code)) {\n        setMovement((state) => ({\n          ...state,\n          [actionByKey(e.code)]: false,\n        }));\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [setTexture]);\n\n  return movement;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}