{"ast":null,"code":"import { Face3 } from \"../../../build/three.module.js\";\n/**\n * Break faces with edges longer than maxEdgeLength\n * - not recursive\n */\n\nvar TessellateModifier = function (maxEdgeLength) {\n  this.maxEdgeLength = maxEdgeLength;\n};\n\nTessellateModifier.prototype.modify = function (geometry) {\n  var edge;\n  var faces = [];\n  var faceVertexUvs = [];\n  var maxEdgeLengthSquared = this.maxEdgeLength * this.maxEdgeLength;\n\n  for (var i = 0, il = geometry.faceVertexUvs.length; i < il; i++) {\n    faceVertexUvs[i] = [];\n  }\n\n  for (var i = 0, il = geometry.faces.length; i < il; i++) {\n    var face = geometry.faces[i];\n\n    if (face instanceof Face3) {\n      var a = face.a;\n      var b = face.b;\n      var c = face.c;\n      var va = geometry.vertices[a];\n      var vb = geometry.vertices[b];\n      var vc = geometry.vertices[c];\n      var dab = va.distanceToSquared(vb);\n      var dbc = vb.distanceToSquared(vc);\n      var dac = va.distanceToSquared(vc);\n\n      if (dab > maxEdgeLengthSquared || dbc > maxEdgeLengthSquared || dac > maxEdgeLengthSquared) {\n        var m = geometry.vertices.length;\n        var triA = face.clone();\n        var triB = face.clone();\n\n        if (dab >= dbc && dab >= dac) {\n          var vm = va.clone();\n          vm.lerp(vb, 0.5);\n          triA.a = a;\n          triA.b = m;\n          triA.c = c;\n          triB.a = m;\n          triB.b = b;\n          triB.c = c;\n\n          if (face.vertexNormals.length === 3) {\n            var vnm = face.vertexNormals[0].clone();\n            vnm.lerp(face.vertexNormals[1], 0.5);\n            triA.vertexNormals[1].copy(vnm);\n            triB.vertexNormals[0].copy(vnm);\n          }\n\n          if (face.vertexColors.length === 3) {\n            var vcm = face.vertexColors[0].clone();\n            vcm.lerp(face.vertexColors[1], 0.5);\n            triA.vertexColors[1].copy(vcm);\n            triB.vertexColors[0].copy(vcm);\n          }\n\n          edge = 0;\n        } else if (dbc >= dab && dbc >= dac) {\n          var vm = vb.clone();\n          vm.lerp(vc, 0.5);\n          triA.a = a;\n          triA.b = b;\n          triA.c = m;\n          triB.a = m;\n          triB.b = c;\n          triB.c = a;\n\n          if (face.vertexNormals.length === 3) {\n            var vnm = face.vertexNormals[1].clone();\n            vnm.lerp(face.vertexNormals[2], 0.5);\n            triA.vertexNormals[2].copy(vnm);\n            triB.vertexNormals[0].copy(vnm);\n            triB.vertexNormals[1].copy(face.vertexNormals[2]);\n            triB.vertexNormals[2].copy(face.vertexNormals[0]);\n          }\n\n          if (face.vertexColors.length === 3) {\n            var vcm = face.vertexColors[1].clone();\n            vcm.lerp(face.vertexColors[2], 0.5);\n            triA.vertexColors[2].copy(vcm);\n            triB.vertexColors[0].copy(vcm);\n            triB.vertexColors[1].copy(face.vertexColors[2]);\n            triB.vertexColors[2].copy(face.vertexColors[0]);\n          }\n\n          edge = 1;\n        } else {\n          var vm = va.clone();\n          vm.lerp(vc, 0.5);\n          triA.a = a;\n          triA.b = b;\n          triA.c = m;\n          triB.a = m;\n          triB.b = b;\n          triB.c = c;\n\n          if (face.vertexNormals.length === 3) {\n            var vnm = face.vertexNormals[0].clone();\n            vnm.lerp(face.vertexNormals[2], 0.5);\n            triA.vertexNormals[2].copy(vnm);\n            triB.vertexNormals[0].copy(vnm);\n          }\n\n          if (face.vertexColors.length === 3) {\n            var vcm = face.vertexColors[0].clone();\n            vcm.lerp(face.vertexColors[2], 0.5);\n            triA.vertexColors[2].copy(vcm);\n            triB.vertexColors[0].copy(vcm);\n          }\n\n          edge = 2;\n        }\n\n        faces.push(triA, triB);\n        geometry.vertices.push(vm);\n\n        for (var j = 0, jl = geometry.faceVertexUvs.length; j < jl; j++) {\n          if (geometry.faceVertexUvs[j].length) {\n            var uvs = geometry.faceVertexUvs[j][i];\n            var uvA = uvs[0];\n            var uvB = uvs[1];\n            var uvC = uvs[2]; // AB\n\n            if (edge === 0) {\n              var uvM = uvA.clone();\n              uvM.lerp(uvB, 0.5);\n              var uvsTriA = [uvA.clone(), uvM.clone(), uvC.clone()];\n              var uvsTriB = [uvM.clone(), uvB.clone(), uvC.clone()]; // BC\n            } else if (edge === 1) {\n              var uvM = uvB.clone();\n              uvM.lerp(uvC, 0.5);\n              var uvsTriA = [uvA.clone(), uvB.clone(), uvM.clone()];\n              var uvsTriB = [uvM.clone(), uvC.clone(), uvA.clone()]; // AC\n            } else {\n              var uvM = uvA.clone();\n              uvM.lerp(uvC, 0.5);\n              var uvsTriA = [uvA.clone(), uvB.clone(), uvM.clone()];\n              var uvsTriB = [uvM.clone(), uvB.clone(), uvC.clone()];\n            }\n\n            faceVertexUvs[j].push(uvsTriA, uvsTriB);\n          }\n        }\n      } else {\n        faces.push(face);\n\n        for (var j = 0, jl = geometry.faceVertexUvs.length; j < jl; j++) {\n          faceVertexUvs[j].push(geometry.faceVertexUvs[j][i]);\n        }\n      }\n    }\n  }\n\n  geometry.faces = faces;\n  geometry.faceVertexUvs = faceVertexUvs;\n};\n\nexport { TessellateModifier };","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react-game/node_modules/three/examples/jsm/modifiers/TessellateModifier.js"],"names":["Face3","TessellateModifier","maxEdgeLength","prototype","modify","geometry","edge","faces","faceVertexUvs","maxEdgeLengthSquared","i","il","length","face","a","b","c","va","vertices","vb","vc","dab","distanceToSquared","dbc","dac","m","triA","clone","triB","vm","lerp","vertexNormals","vnm","copy","vertexColors","vcm","push","j","jl","uvs","uvA","uvB","uvC","uvM","uvsTriA","uvsTriB"],"mappings":"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","sourcesContent":["import {\n\tFace3\n} from \"../../../build/three.module.js\";\n/**\n * Break faces with edges longer than maxEdgeLength\n * - not recursive\n */\n\nvar TessellateModifier = function ( maxEdgeLength ) {\n\n\tthis.maxEdgeLength = maxEdgeLength;\n\n};\n\nTessellateModifier.prototype.modify = function ( geometry ) {\n\n\tvar edge;\n\n\tvar faces = [];\n\tvar faceVertexUvs = [];\n\tvar maxEdgeLengthSquared = this.maxEdgeLength * this.maxEdgeLength;\n\n\tfor ( var i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\tfaceVertexUvs[ i ] = [];\n\n\t}\n\n\tfor ( var i = 0, il = geometry.faces.length; i < il; i ++ ) {\n\n\t\tvar face = geometry.faces[ i ];\n\n\t\tif ( face instanceof Face3 ) {\n\n\t\t\tvar a = face.a;\n\t\t\tvar b = face.b;\n\t\t\tvar c = face.c;\n\n\t\t\tvar va = geometry.vertices[ a ];\n\t\t\tvar vb = geometry.vertices[ b ];\n\t\t\tvar vc = geometry.vertices[ c ];\n\n\t\t\tvar dab = va.distanceToSquared( vb );\n\t\t\tvar dbc = vb.distanceToSquared( vc );\n\t\t\tvar dac = va.distanceToSquared( vc );\n\n\t\t\tif ( dab > maxEdgeLengthSquared || dbc > maxEdgeLengthSquared || dac > maxEdgeLengthSquared ) {\n\n\t\t\t\tvar m = geometry.vertices.length;\n\n\t\t\t\tvar triA = face.clone();\n\t\t\t\tvar triB = face.clone();\n\n\t\t\t\tif ( dab >= dbc && dab >= dac ) {\n\n\t\t\t\t\tvar vm = va.clone();\n\t\t\t\t\tvm.lerp( vb, 0.5 );\n\n\t\t\t\t\ttriA.a = a;\n\t\t\t\t\ttriA.b = m;\n\t\t\t\t\ttriA.c = c;\n\n\t\t\t\t\ttriB.a = m;\n\t\t\t\t\ttriB.b = b;\n\t\t\t\t\ttriB.c = c;\n\n\t\t\t\t\tif ( face.vertexNormals.length === 3 ) {\n\n\t\t\t\t\t\tvar vnm = face.vertexNormals[ 0 ].clone();\n\t\t\t\t\t\tvnm.lerp( face.vertexNormals[ 1 ], 0.5 );\n\n\t\t\t\t\t\ttriA.vertexNormals[ 1 ].copy( vnm );\n\t\t\t\t\t\ttriB.vertexNormals[ 0 ].copy( vnm );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( face.vertexColors.length === 3 ) {\n\n\t\t\t\t\t\tvar vcm = face.vertexColors[ 0 ].clone();\n\t\t\t\t\t\tvcm.lerp( face.vertexColors[ 1 ], 0.5 );\n\n\t\t\t\t\t\ttriA.vertexColors[ 1 ].copy( vcm );\n\t\t\t\t\t\ttriB.vertexColors[ 0 ].copy( vcm );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedge = 0;\n\n\t\t\t\t} else if ( dbc >= dab && dbc >= dac ) {\n\n\t\t\t\t\tvar vm = vb.clone();\n\t\t\t\t\tvm.lerp( vc, 0.5 );\n\n\t\t\t\t\ttriA.a = a;\n\t\t\t\t\ttriA.b = b;\n\t\t\t\t\ttriA.c = m;\n\n\t\t\t\t\ttriB.a = m;\n\t\t\t\t\ttriB.b = c;\n\t\t\t\t\ttriB.c = a;\n\n\t\t\t\t\tif ( face.vertexNormals.length === 3 ) {\n\n\t\t\t\t\t\tvar vnm = face.vertexNormals[ 1 ].clone();\n\t\t\t\t\t\tvnm.lerp( face.vertexNormals[ 2 ], 0.5 );\n\n\t\t\t\t\t\ttriA.vertexNormals[ 2 ].copy( vnm );\n\n\t\t\t\t\t\ttriB.vertexNormals[ 0 ].copy( vnm );\n\t\t\t\t\t\ttriB.vertexNormals[ 1 ].copy( face.vertexNormals[ 2 ] );\n\t\t\t\t\t\ttriB.vertexNormals[ 2 ].copy( face.vertexNormals[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( face.vertexColors.length === 3 ) {\n\n\t\t\t\t\t\tvar vcm = face.vertexColors[ 1 ].clone();\n\t\t\t\t\t\tvcm.lerp( face.vertexColors[ 2 ], 0.5 );\n\n\t\t\t\t\t\ttriA.vertexColors[ 2 ].copy( vcm );\n\n\t\t\t\t\t\ttriB.vertexColors[ 0 ].copy( vcm );\n\t\t\t\t\t\ttriB.vertexColors[ 1 ].copy( face.vertexColors[ 2 ] );\n\t\t\t\t\t\ttriB.vertexColors[ 2 ].copy( face.vertexColors[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedge = 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vm = va.clone();\n\t\t\t\t\tvm.lerp( vc, 0.5 );\n\n\t\t\t\t\ttriA.a = a;\n\t\t\t\t\ttriA.b = b;\n\t\t\t\t\ttriA.c = m;\n\n\t\t\t\t\ttriB.a = m;\n\t\t\t\t\ttriB.b = b;\n\t\t\t\t\ttriB.c = c;\n\n\t\t\t\t\tif ( face.vertexNormals.length === 3 ) {\n\n\t\t\t\t\t\tvar vnm = face.vertexNormals[ 0 ].clone();\n\t\t\t\t\t\tvnm.lerp( face.vertexNormals[ 2 ], 0.5 );\n\n\t\t\t\t\t\ttriA.vertexNormals[ 2 ].copy( vnm );\n\t\t\t\t\t\ttriB.vertexNormals[ 0 ].copy( vnm );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( face.vertexColors.length === 3 ) {\n\n\t\t\t\t\t\tvar vcm = face.vertexColors[ 0 ].clone();\n\t\t\t\t\t\tvcm.lerp( face.vertexColors[ 2 ], 0.5 );\n\n\t\t\t\t\t\ttriA.vertexColors[ 2 ].copy( vcm );\n\t\t\t\t\t\ttriB.vertexColors[ 0 ].copy( vcm );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedge = 2;\n\n\t\t\t\t}\n\n\t\t\t\tfaces.push( triA, triB );\n\t\t\t\tgeometry.vertices.push( vm );\n\n\t\t\t\tfor ( var j = 0, jl = geometry.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tif ( geometry.faceVertexUvs[ j ].length ) {\n\n\t\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ j ][ i ];\n\n\t\t\t\t\t\tvar uvA = uvs[ 0 ];\n\t\t\t\t\t\tvar uvB = uvs[ 1 ];\n\t\t\t\t\t\tvar uvC = uvs[ 2 ];\n\n\t\t\t\t\t\t// AB\n\n\t\t\t\t\t\tif ( edge === 0 ) {\n\n\t\t\t\t\t\t\tvar uvM = uvA.clone();\n\t\t\t\t\t\t\tuvM.lerp( uvB, 0.5 );\n\n\t\t\t\t\t\t\tvar uvsTriA = [ uvA.clone(), uvM.clone(), uvC.clone() ];\n\t\t\t\t\t\t\tvar uvsTriB = [ uvM.clone(), uvB.clone(), uvC.clone() ];\n\n\t\t\t\t\t\t\t// BC\n\n\t\t\t\t\t\t} else if ( edge === 1 ) {\n\n\t\t\t\t\t\t\tvar uvM = uvB.clone();\n\t\t\t\t\t\t\tuvM.lerp( uvC, 0.5 );\n\n\t\t\t\t\t\t\tvar uvsTriA = [ uvA.clone(), uvB.clone(), uvM.clone() ];\n\t\t\t\t\t\t\tvar uvsTriB = [ uvM.clone(), uvC.clone(), uvA.clone() ];\n\n\t\t\t\t\t\t\t// AC\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar uvM = uvA.clone();\n\t\t\t\t\t\t\tuvM.lerp( uvC, 0.5 );\n\n\t\t\t\t\t\t\tvar uvsTriA = [ uvA.clone(), uvB.clone(), uvM.clone() ];\n\t\t\t\t\t\t\tvar uvsTriB = [ uvM.clone(), uvB.clone(), uvC.clone() ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceVertexUvs[ j ].push( uvsTriA, uvsTriB );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfaces.push( face );\n\n\t\t\t\tfor ( var j = 0, jl = geometry.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tfaceVertexUvs[ j ].push( geometry.faceVertexUvs[ j ][ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgeometry.faces = faces;\n\tgeometry.faceVertexUvs = faceVertexUvs;\n\n};\n\nexport { TessellateModifier };\n"]},"metadata":{},"sourceType":"module"}