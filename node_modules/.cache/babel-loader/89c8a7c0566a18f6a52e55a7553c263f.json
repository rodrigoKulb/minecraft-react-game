{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useStore } from './useStore'; //import andarSom from '../audio/andar.wav';\n//import jumpSom from '../audio/jump.wav';\n\nfunction actionByKey(key) {\n  const keys = {\n    KeyW: 'moveForward',\n    KeyS: 'moveBackward',\n    KeyA: 'moveLeft',\n    KeyD: 'moveRight',\n    Space: 'jump'\n  };\n  return keys[key];\n}\n\nlet numMao = 0;\nlet movimento = 0;\n\nfunction animaMao() {\n  console.log(numMao);\n\n  if (numMao <= -60) {\n    movimento = 10;\n  } else if (numMao >= 0) {\n    movimento = -10;\n  }\n\n  parseFloat(numMao += movimento);\n  document.getElementById(\"mao\").style.bottom = numMao + 'px';\n}\n\nfunction textureByKey(key) {\n  const keys = {\n    Digit1: 'dirt',\n    Digit2: 'glass',\n    Digit3: 'green',\n    Digit4: 'wood',\n    Digit5: 'log',\n    Digit6: 'dirtgrass',\n    Digit7: 'agua'\n  };\n  return keys[key];\n}\n\nexport const useKeyboardControls = () => {\n  useEffect(() => {\n    document.getElementsByClassName(\"botoesZerar\")[0].addEventListener('click', () => {\n      window.localStorage.setItem('world', null);\n    });\n  }, []);\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false\n  });\n  const [setTexture] = useStore(state => [state.setTexture]); //const [plaingCount,setPlaingCount] = useState(0);\n  //const [playAndar] = useState(new Audio(andarSom));\n  //const [playJump] = useState(new Audio(jumpSom));\n\n  let plaingCount = [];\n  plaingCount['KeyS'] = 0;\n  plaingCount['KeyA'] = 0;\n  plaingCount['KeyW'] = 0;\n  plaingCount['KeyD'] = 0; // //let total = 0;\n  // useEffect(() => {\n  //   const teclaKeyPress = (e) => {\n  //     console.log(e.code);\n  //     if(e.code==='Escape')\n  //     {\n  //       document.getElementById(\"aparece\").style.display = 'block';\n  //     }\n  //     if(e.code==='KeyS' || e.code==='KeyA' || e.code==='KeyW' || e.code==='KeyD')\n  //     {\n  //       animaMao();\n  //     }\n  //   //   if(e.code==='Space')  playJump.play();\n  //   //   plaingCount[e.code] = 1;\n  //   //   total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n  //   //   if(total>0){\n  //   //     playAndar.play();\n  //   //   }\n  //   //   for ( var i = 0; i < plaingCount.length; i++ ){\n  //   //     total += plaingCount[i];\n  //   //  }\n  //    }\n  //   const teclaKeyUp = (e) => {\n  //     if(e.code==='KeyS' || e.code==='KeyA' || e.code==='KeyW' || e.code==='KeyD')\n  //     {\n  //       animaMao();\n  //     }\n  //     //plaingCount[e.code] = 0;\n  //     //total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n  //     //if(total===0){\n  //     //playAndar.pause();\n  //    //}\n  //   }\n  //   document.addEventListener('keypress', teclaKeyPress);\n  //   document.addEventListener('keyup', teclaKeyUp);\n  //   return () => {\n  //     document.removeEventListener('keypress', teclaKeyPress);\n  //     document.removeEventListener('keyup', teclaKeyUp);\n  //   };\n  // }, []);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'KeyS' || e.code === 'KeyA' || e.code === 'KeyW' || e.code === 'KeyD') {\n        animaMao();\n      } // Movement key\n\n\n      if (actionByKey(e.code)) {\n        setMovement(state => ({ ...state,\n          [actionByKey(e.code)]: true\n        }));\n      } // Change texture key\n\n\n      if (textureByKey(e.code)) {\n        setTexture(textureByKey(e.code));\n      }\n    };\n\n    const handleKeyUp = e => {\n      if (actionByKey(e.code)) {\n        setMovement(state => ({ ...state,\n          [actionByKey(e.code)]: false\n        }));\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [setTexture]);\n  return movement;\n};","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react-game/src/hooks/useKeyboardControls.js"],"names":["useState","useEffect","useStore","actionByKey","key","keys","KeyW","KeyS","KeyA","KeyD","Space","numMao","movimento","animaMao","console","log","parseFloat","document","getElementById","style","bottom","textureByKey","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","useKeyboardControls","getElementsByClassName","addEventListener","window","localStorage","setItem","movement","setMovement","moveForward","moveBackward","moveLeft","moveRight","jump","setTexture","state","plaingCount","handleKeyDown","e","code","handleKeyUp","removeEventListener"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useStore } from './useStore';\n//import andarSom from '../audio/andar.wav';\n//import jumpSom from '../audio/jump.wav';\n\n\n\nfunction actionByKey(key) {\n  const keys = {\n    KeyW: 'moveForward',\n    KeyS: 'moveBackward',\n    KeyA: 'moveLeft',\n    KeyD: 'moveRight',\n    Space: 'jump',\n  };\n  return keys[key];\n}\n\nlet numMao = 0;\nlet movimento = 0;\n\nfunction animaMao()\n{\n  console.log(numMao);\n  if(numMao<=-60)\n  {\n    movimento = 10;\n  }\n  else if(numMao>=0)\n  {\n    movimento = -10;\n  }\n  parseFloat(numMao+=movimento);\n  document.getElementById(\"mao\").style.bottom = numMao+'px';\n}\n\n\nfunction textureByKey(key) {\n  const keys = {\n    Digit1: 'dirt',\n    Digit2: 'glass',\n    Digit3: 'green',\n    Digit4: 'wood',\n    Digit5: 'log',\n    Digit6: 'dirtgrass',\n    Digit7: 'agua',\n  };\n  return keys[key];\n}\nexport const useKeyboardControls = () => {\n\n\n  useEffect(() => {\n    document.getElementsByClassName(\"botoesZerar\").[0].addEventListener('click', () => {\n      window.localStorage.setItem('world',null);\n    });\n  }, []);\n\n\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false,\n  });\n\n  const [setTexture] = useStore((state) => [state.setTexture]);\n  //const [plaingCount,setPlaingCount] = useState(0);\n  //const [playAndar] = useState(new Audio(andarSom));\n  //const [playJump] = useState(new Audio(jumpSom));\n  \n\n  let plaingCount =  [];\n  plaingCount['KeyS'] = 0;\n  plaingCount['KeyA'] = 0;\n  plaingCount['KeyW'] = 0;\n  plaingCount['KeyD'] = 0;\n\n  // //let total = 0;\n  // useEffect(() => {\n    \n  //   const teclaKeyPress = (e) => {\n  //     console.log(e.code);\n  //     if(e.code==='Escape')\n  //     {\n  //       document.getElementById(\"aparece\").style.display = 'block';\n       \n  //     }\n  //     if(e.code==='KeyS' || e.code==='KeyA' || e.code==='KeyW' || e.code==='KeyD')\n  //     {\n  //       animaMao();\n  //     }\n  //   //   if(e.code==='Space')  playJump.play();\n  //   //   plaingCount[e.code] = 1;\n  //   //   total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n\n  //   //   if(total>0){\n  //   //     playAndar.play();\n  //   //   }\n  //   //   for ( var i = 0; i < plaingCount.length; i++ ){\n  //   //     total += plaingCount[i];\n \n  //   //  }\n  //    }\n  //   const teclaKeyUp = (e) => {\n  //     if(e.code==='KeyS' || e.code==='KeyA' || e.code==='KeyW' || e.code==='KeyD')\n  //     {\n  //       animaMao();\n  //     }\n  //     //plaingCount[e.code] = 0;\n  //     //total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n      \n  //     //if(total===0){\n\n  //     //playAndar.pause();\n  //    //}\n  //   }\n  //   document.addEventListener('keypress', teclaKeyPress);\n  //   document.addEventListener('keyup', teclaKeyUp);\n\n  //   return () => {\n  //     document.removeEventListener('keypress', teclaKeyPress);\n  //     document.removeEventListener('keyup', teclaKeyUp);\n  //   };\n  // }, []);\n\n\n  useEffect(() => {\n   \n    const handleKeyDown = (e) => {\n     \n      if(e.code==='KeyS' || e.code==='KeyA' || e.code==='KeyW' || e.code==='KeyD')\n      {\n        animaMao();\n      }\n      // Movement key\n      if (actionByKey(e.code)) {\n        setMovement((state) => ({\n          ...state,\n          [actionByKey(e.code)]: true,\n        }));\n      }\n      // Change texture key\n      if (textureByKey(e.code)) {\n        setTexture(textureByKey(e.code));\n      }\n    };\n    const handleKeyUp = (e) => {\n      \n      if (actionByKey(e.code)) {\n        setMovement((state) => ({\n          ...state,\n          [actionByKey(e.code)]: false,\n        }));\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [setTexture]);\n\n  return movement;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}