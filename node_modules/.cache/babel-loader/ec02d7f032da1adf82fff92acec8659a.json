{"ast":null,"code":"import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { Globals as Globals$1 } from '@react-spring/core';\nexport * from '@react-spring/core';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { createStringInterpolator } from '@react-spring/shared/stringInterpolation';\nimport colorNames from '@react-spring/shared/colors';\nimport { AnimatedObject, createHost } from '@react-spring/animated';\nimport { Globals, each, is, toArray, FluidValue, getFluidValue, getFluidConfig } from '@react-spring/shared';\nconst isCustomPropRE = /^--/;\n\nfunction dangerousStyleValue(name, value) {\n  if (value == null || typeof value === 'boolean' || value === '') return '';\n  if (typeof value === 'number' && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n\n  return ('' + value).trim();\n}\n\nconst attributeCache = {};\n\nfunction applyAnimatedValues(instance, props) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false;\n  }\n\n  const isFilterElement = instance.nodeName === 'filter' || instance.parentNode && instance.parentNode.nodeName === 'filter';\n\n  const _ref = props,\n        {\n    style,\n    children,\n    scrollTop,\n    scrollLeft\n  } = _ref,\n        attributes = _objectWithoutPropertiesLoose(_ref, [\"style\", \"children\", \"scrollTop\", \"scrollLeft\"]);\n\n  const values = Object.values(attributes);\n  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, // Attributes are written in dash case\n  n => '-' + n.toLowerCase())));\n  Globals.frameLoop.onWrite(() => {\n    if (children !== void 0) {\n      instance.textContent = children;\n    } // Apply CSS styles\n\n\n    for (let name in style) {\n      if (style.hasOwnProperty(name)) {\n        const value = dangerousStyleValue(name, style[name]);\n        if (name === 'float') name = 'cssFloat';else if (isCustomPropRE.test(name)) {\n          instance.style.setProperty(name, value);\n        } else {\n          instance.style[name] = value;\n        }\n      }\n    } // Apply DOM attributes\n\n\n    names.forEach((name, i) => {\n      instance.setAttribute(name, values[i]);\n    });\n\n    if (scrollTop !== void 0) {\n      instance.scrollTop = scrollTop;\n    }\n\n    if (scrollLeft !== void 0) {\n      instance.scrollLeft = scrollLeft;\n    }\n  });\n}\n\nlet isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O'];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\n/** The transform-functions\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\n * that you can pass as keys to your animated component style and that will be\n * animated. Perspective has been left out as it would conflict with the\n * non-transform perspective style.\n */\n\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/; // These keys have \"px\" units by default\n\nconst pxTransforms = /^(translate)/; // These keys have \"deg\" units by default\n\nconst degTransforms = /^(rotate|skew)/;\n/** Add a unit to the value when the value is unit-less (eg: a number) */\n\nconst addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;\n/**\n * Checks if the input value matches the identity value.\n *\n *     isValueIdentity(0, 0)              // => true\n *     isValueIdentity('0px', 0)          // => true\n *     isValueIdentity([0, '0px', 0], 0)  // => true\n */\n\n\nconst isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;\n/**\n * This AnimatedStyle will simplify animated components transforms by\n * interpolating all transform function passed as keys in the style object\n * including shortcuts such as x, y and z for translateX/Y/Z\n */\n\n\nclass AnimatedStyle extends AnimatedObject {\n  constructor(_ref) {\n    let {\n      x,\n      y,\n      z\n    } = _ref,\n        style = _objectWithoutPropertiesLoose(_ref, [\"x\", \"y\", \"z\"]);\n    /**\n     * An array of arrays that contains the values (static or fluid)\n     * used by each transform function.\n     */\n\n\n    const inputs = [];\n    /**\n     * An array of functions that take a list of values (static or fluid)\n     * and returns (1) a CSS transform string and (2) a boolean that's true\n     * when the transform has no effect (eg: an identity transform).\n     */\n\n    const transforms = []; // Combine x/y/z into translate3d\n\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0]);\n      transforms.push(xyz => [\"translate3d(\" + xyz.map(v => addUnit(v, 'px')).join(',') + \")\", // prettier-ignore\n      isValueIdentity(xyz, 0)]);\n    } // Pluck any other transform-related props\n\n\n    each(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || '']);\n        transforms.push(transform => [transform, transform === '']);\n      } else if (domTransforms.test(key)) {\n        delete style[key];\n        if (is.und(value)) return;\n        const unit = pxTransforms.test(key) ? 'px' : degTransforms.test(key) ? 'deg' : '';\n        inputs.push(toArray(value));\n        transforms.push(key === 'rotate3d' ? ([x, y, z, deg]) => [\"rotate3d(\" + x + \",\" + y + \",\" + z + \",\" + addUnit(deg, unit) + \")\", isValueIdentity(deg, 0)] : input => [key + \"(\" + input.map(v => addUnit(v, unit)).join(',') + \")\", isValueIdentity(input, key.startsWith('scale') ? 1 : 0)]);\n      }\n    });\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms);\n    }\n\n    super(style);\n  }\n\n}\n/** @internal */\n\n\nclass FluidTransform extends FluidValue {\n  constructor(inputs, transforms) {\n    super();\n    this.inputs = inputs;\n    this.transforms = transforms;\n    this._value = null;\n    this._children = new Set();\n  }\n\n  get() {\n    return this._value || (this._value = this._get());\n  }\n\n  _get() {\n    let transform = '';\n    let identity = true;\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0]);\n      const [t, id] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));\n      transform += ' ' + t;\n      identity = identity && id;\n    });\n    return identity ? 'none' : transform;\n  }\n\n  addChild(child) {\n    if (!this._children.size) {\n      // Start observing our inputs once we have an observer.\n      each(this.inputs, input => each(input, value => {\n        const config = getFluidConfig(value);\n        if (config) config.addChild(this);\n      }));\n    }\n\n    this._children.add(child);\n  }\n\n  removeChild(child) {\n    this._children.delete(child);\n\n    if (!this._children.size) {\n      // Stop observing our inputs once we have no observers.\n      each(this.inputs, input => each(input, value => {\n        const config = getFluidConfig(value);\n        if (config) config.removeChild(this);\n      }));\n    }\n  }\n\n  onParentChange(event) {\n    if (event.type == 'change') {\n      this._value = null;\n    }\n\n    each(this._children, child => {\n      child.onParentChange(event);\n    });\n  }\n\n}\n\nconst primitives = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\nGlobals$1.assign({\n  colorNames,\n  createStringInterpolator,\n  batchedUpdates: unstable_batchedUpdates\n});\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  getComponentProps: _ref => {\n    let props = _objectWithoutPropertiesLoose(_ref, [\"scrollTop\", \"scrollLeft\"]);\n\n    return props;\n  }\n});\nconst animated = host.animated;\nexport { animated as a, animated };","map":{"version":3,"sources":["src/applyAnimatedValues.ts","src/AnimatedStyle.ts","src/primitives.ts","src/index.ts"],"names":["isCustomPropRE","value","isUnitlessNumber","attributeCache","instance","isFilterElement","scrollLeft","attributes","values","Object","names","name","n","G","children","style","dangerousStyleValue","scrollTop","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixKey","prefix","key","prefixes","acc","domTransforms","pxTransforms","degTransforms","addUnit","is","isValueIdentity","v","parseFloat","constructor","z","inputs","transforms","x","y","xyz","each","transform","unit","toArray","input","_value","_children","get","_get","identity","arg1","getFluidValue","addChild","config","getFluidConfig","removeChild","onParentChange","event","child","primitives","Globals","batchedUpdates","unstable_batchedUpdates","host","createHost","createAnimatedStyle","getComponentProps","props","animated"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { Globals as Globals$1 } from '@react-spring/core';\nexport * from '@react-spring/core';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { createStringInterpolator } from '@react-spring/shared/stringInterpolation';\nimport colorNames from '@react-spring/shared/colors';\nimport { AnimatedObject, createHost } from '@react-spring/animated';\nimport { Globals, each, is, toArray, FluidValue, getFluidValue, getFluidConfig } from '@react-spring/shared';\n\nconst isCustomPropRE = /^--/;\n\nfunction dangerousStyleValue(name, value) {\n  if (value == null || typeof value === 'boolean' || value === '') return '';\n  if (typeof value === 'number' && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n\n  return ('' + value).trim();\n}\n\nconst attributeCache = {};\nfunction applyAnimatedValues(instance, props) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false;\n  }\n\n  const isFilterElement = instance.nodeName === 'filter' || instance.parentNode && instance.parentNode.nodeName === 'filter';\n\n  const _ref = props,\n        {\n    style,\n    children,\n    scrollTop,\n    scrollLeft\n  } = _ref,\n        attributes = _objectWithoutPropertiesLoose(_ref, [\"style\", \"children\", \"scrollTop\", \"scrollLeft\"]);\n\n  const values = Object.values(attributes);\n  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, // Attributes are written in dash case\n  n => '-' + n.toLowerCase())));\n  Globals.frameLoop.onWrite(() => {\n    if (children !== void 0) {\n      instance.textContent = children;\n    } // Apply CSS styles\n\n\n    for (let name in style) {\n      if (style.hasOwnProperty(name)) {\n        const value = dangerousStyleValue(name, style[name]);\n        if (name === 'float') name = 'cssFloat';else if (isCustomPropRE.test(name)) {\n          instance.style.setProperty(name, value);\n        } else {\n          instance.style[name] = value;\n        }\n      }\n    } // Apply DOM attributes\n\n\n    names.forEach((name, i) => {\n      instance.setAttribute(name, values[i]);\n    });\n\n    if (scrollTop !== void 0) {\n      instance.scrollTop = scrollTop;\n    }\n\n    if (scrollLeft !== void 0) {\n      instance.scrollLeft = scrollLeft;\n    }\n  });\n}\nlet isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O'];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\n\n/** The transform-functions\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\n * that you can pass as keys to your animated component style and that will be\n * animated. Perspective has been left out as it would conflict with the\n * non-transform perspective style.\n */\n\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/; // These keys have \"px\" units by default\n\nconst pxTransforms = /^(translate)/; // These keys have \"deg\" units by default\n\nconst degTransforms = /^(rotate|skew)/;\n\n/** Add a unit to the value when the value is unit-less (eg: a number) */\nconst addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;\n/**\n * Checks if the input value matches the identity value.\n *\n *     isValueIdentity(0, 0)              // => true\n *     isValueIdentity('0px', 0)          // => true\n *     isValueIdentity([0, '0px', 0], 0)  // => true\n */\n\n\nconst isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;\n\n/**\n * This AnimatedStyle will simplify animated components transforms by\n * interpolating all transform function passed as keys in the style object\n * including shortcuts such as x, y and z for translateX/Y/Z\n */\nclass AnimatedStyle extends AnimatedObject {\n  constructor(_ref) {\n    let {\n      x,\n      y,\n      z\n    } = _ref,\n        style = _objectWithoutPropertiesLoose(_ref, [\"x\", \"y\", \"z\"]);\n\n    /**\n     * An array of arrays that contains the values (static or fluid)\n     * used by each transform function.\n     */\n    const inputs = [];\n    /**\n     * An array of functions that take a list of values (static or fluid)\n     * and returns (1) a CSS transform string and (2) a boolean that's true\n     * when the transform has no effect (eg: an identity transform).\n     */\n\n    const transforms = []; // Combine x/y/z into translate3d\n\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0]);\n      transforms.push(xyz => [\"translate3d(\" + xyz.map(v => addUnit(v, 'px')).join(',') + \")\", // prettier-ignore\n      isValueIdentity(xyz, 0)]);\n    } // Pluck any other transform-related props\n\n\n    each(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || '']);\n        transforms.push(transform => [transform, transform === '']);\n      } else if (domTransforms.test(key)) {\n        delete style[key];\n        if (is.und(value)) return;\n        const unit = pxTransforms.test(key) ? 'px' : degTransforms.test(key) ? 'deg' : '';\n        inputs.push(toArray(value));\n        transforms.push(key === 'rotate3d' ? ([x, y, z, deg]) => [\"rotate3d(\" + x + \",\" + y + \",\" + z + \",\" + addUnit(deg, unit) + \")\", isValueIdentity(deg, 0)] : input => [key + \"(\" + input.map(v => addUnit(v, unit)).join(',') + \")\", isValueIdentity(input, key.startsWith('scale') ? 1 : 0)]);\n      }\n    });\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms);\n    }\n\n    super(style);\n  }\n\n}\n/** @internal */\n\nclass FluidTransform extends FluidValue {\n  constructor(inputs, transforms) {\n    super();\n    this.inputs = inputs;\n    this.transforms = transforms;\n    this._value = null;\n    this._children = new Set();\n  }\n\n  get() {\n    return this._value || (this._value = this._get());\n  }\n\n  _get() {\n    let transform = '';\n    let identity = true;\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0]);\n      const [t, id] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));\n      transform += ' ' + t;\n      identity = identity && id;\n    });\n    return identity ? 'none' : transform;\n  }\n\n  addChild(child) {\n    if (!this._children.size) {\n      // Start observing our inputs once we have an observer.\n      each(this.inputs, input => each(input, value => {\n        const config = getFluidConfig(value);\n        if (config) config.addChild(this);\n      }));\n    }\n\n    this._children.add(child);\n  }\n\n  removeChild(child) {\n    this._children.delete(child);\n\n    if (!this._children.size) {\n      // Stop observing our inputs once we have no observers.\n      each(this.inputs, input => each(input, value => {\n        const config = getFluidConfig(value);\n        if (config) config.removeChild(this);\n      }));\n    }\n  }\n\n  onParentChange(event) {\n    if (event.type == 'change') {\n      this._value = null;\n    }\n\n    each(this._children, child => {\n      child.onParentChange(event);\n    });\n  }\n\n}\n\nconst primitives = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nGlobals$1.assign({\n  colorNames,\n  createStringInterpolator,\n  batchedUpdates: unstable_batchedUpdates\n});\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  getComponentProps: (_ref) => {\n    let props = _objectWithoutPropertiesLoose(_ref, [\"scrollTop\", \"scrollLeft\"]);\n\n    return props;\n  }\n});\nconst animated = host.animated;\n\nexport { animated as a, animated };\n//# sourceMappingURL=index.js.map\n"]},"metadata":{},"sourceType":"module"}