{"ast":null,"code":"import create from 'zustand';\nimport { nanoid } from 'nanoid';\n\nconst getLocalStorage = key => JSON.parse(window.localStorage.getItem(key));\n\nconst setLocalStorage = (key, value) => window.localStorage.setItem(key, JSON.stringify(value));\n\nexport const useStore = create(set => ({\n  texture: 'dirt',\n  cubes: getLocalStorage('world') || [],\n  addCube: (x, y, z) => set(state => ({\n    cubes: [...state.cubes, {\n      key: nanoid(),\n      pos: [x, y, z],\n      texture: state.texture\n    }]\n  })),\n  removeCube: (x, y, z) => {\n    set(state => ({\n      cubes: state.cubes.filter(cube => {\n        const [_x, _y, _z] = cube.pos;\n        return _x !== x || _y !== y || _z !== z;\n      })\n    }));\n  },\n  setTexture: texture => {\n    set(state => ({\n      texture\n    }));\n  },\n  saveWorld: () => set(state => {\n    setLocalStorage('world', state.cubes);\n  })\n}));","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react/src/hooks/useStore.js"],"names":["create","nanoid","getLocalStorage","key","JSON","parse","window","localStorage","getItem","setLocalStorage","value","setItem","stringify","useStore","set","texture","cubes","addCube","x","y","z","state","pos","removeCube","filter","cube","_x","_y","_z","setTexture","saveWorld"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,eAAe,GAAIC,GAAD,IAASC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAAX,CAAjC;;AACA,MAAMM,eAAe,GAAG,CAACN,GAAD,EAAMO,KAAN,KACtBJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BR,GAA5B,EAAiCC,IAAI,CAACQ,SAAL,CAAeF,KAAf,CAAjC,CADF;;AAGA,OAAO,MAAMG,QAAQ,GAAGb,MAAM,CAAEc,GAAD,KAAU;AACvCC,EAAAA,OAAO,EAAE,MAD8B;AAEvCC,EAAAA,KAAK,EAAEd,eAAe,CAAC,OAAD,CAAf,IAA4B,EAFI;AAGvCe,EAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KACPN,GAAG,CAAEO,KAAD,KAAY;AACdL,IAAAA,KAAK,EAAE,CACL,GAAGK,KAAK,CAACL,KADJ,EAEL;AAAEb,MAAAA,GAAG,EAAEF,MAAM,EAAb;AAAiBqB,MAAAA,GAAG,EAAE,CAACJ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAtB;AAAiCL,MAAAA,OAAO,EAAEM,KAAK,CAACN;AAAhD,KAFK;AADO,GAAZ,CAAD,CAJkC;AAUvCQ,EAAAA,UAAU,EAAE,CAACL,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACvBN,IAAAA,GAAG,CAAEO,KAAD,KAAY;AACdL,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,MAAZ,CAAoBC,IAAD,IAAU;AAClC,cAAM,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,IAAeH,IAAI,CAACH,GAA1B;AACA,eAAOI,EAAE,KAAKR,CAAP,IAAYS,EAAE,KAAKR,CAAnB,IAAwBS,EAAE,KAAKR,CAAtC;AACD,OAHM;AADO,KAAZ,CAAD,CAAH;AAMD,GAjBsC;AAkBvCS,EAAAA,UAAU,EAAGd,OAAD,IAAa;AACvBD,IAAAA,GAAG,CAAEO,KAAD,KAAY;AACdN,MAAAA;AADc,KAAZ,CAAD,CAAH;AAGD,GAtBsC;AAuBvCe,EAAAA,SAAS,EAAE,MACThB,GAAG,CAAEO,KAAD,IAAW;AACbZ,IAAAA,eAAe,CAAC,OAAD,EAAUY,KAAK,CAACL,KAAhB,CAAf;AACD,GAFE;AAxBkC,CAAV,CAAD,CAAvB","sourcesContent":["import create from 'zustand';\nimport { nanoid } from 'nanoid';\n\nconst getLocalStorage = (key) => JSON.parse(window.localStorage.getItem(key));\nconst setLocalStorage = (key, value) =>\n  window.localStorage.setItem(key, JSON.stringify(value));\n\nexport const useStore = create((set) => ({\n  texture: 'dirt',\n  cubes: getLocalStorage('world') || [],\n  addCube: (x, y, z) =>\n    set((state) => ({\n      cubes: [\n        ...state.cubes,\n        { key: nanoid(), pos: [x, y, z], texture: state.texture },\n      ],\n    })),\n  removeCube: (x, y, z) => {\n    set((state) => ({\n      cubes: state.cubes.filter((cube) => {\n        const [_x, _y, _z] = cube.pos;\n        return _x !== x || _y !== y || _z !== z;\n      }),\n    }));\n  },\n  setTexture: (texture) => {\n    set((state) => ({\n      texture,\n    }));\n  },\n  saveWorld: () =>\n    set((state) => {\n      setLocalStorage('world', state.cubes);\n    }),\n}));\n"]},"metadata":{},"sourceType":"module"}