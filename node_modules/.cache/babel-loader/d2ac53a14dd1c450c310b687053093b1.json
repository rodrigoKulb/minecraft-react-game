{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react-game/src/components/Arm.js\";\nimport React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nexport const Arm = position => {\n  const ref = useRef();\n  useFrame(() => ref.current.rotation.x = ref.current.rotation.y += 0.01);\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [-0.75 + 4, 0, 0.02],\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    args: [1, 1, 1],\n    attach: \"geometry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshPhongMaterial\", {\n    color: \"black\",\n    attach: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react-game/src/components/Arm.js"],"names":["React","useRef","useFrame","Arm","position","ref","current","rotation","x","y"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AAGA,OAAO,MAAMC,GAAG,GAAIC,QAAD,IAAc;AAC/B,QAAMC,GAAG,GAAGJ,MAAM,EAAlB;AACAC,EAAAA,QAAQ,CAAC,MAAOG,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,GAAyBH,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,IAA0B,IAA3D,CAAR;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAC,IAAD,GAAQ,CAAT,EAAY,CAAZ,EAAe,IAAf,CAAhB;AAAsC,IAAA,GAAG,EAAEJ,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAmB,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAzB;AAAoC,IAAA,MAAM,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAmB,IAAA,KAAK,EAAC,OAAzB;AAAkC,IAAA,MAAM,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAVM","sourcesContent":["import React, {useRef} from \"react\"\nimport {useFrame} from \"react-three-fiber\"\n\n\nexport const Arm = (position) => {\n  const ref = useRef()\n  useFrame(() => (ref.current.rotation.x = ref.current.rotation.y += 0.01))\n\n  return (\n    <mesh position={[-0.75 + 4, 0, 0.02]} ref={ref}>\n      <boxBufferGeometry args={[1, 1, 1]} attach=\"geometry\" />\n      <meshPhongMaterial color=\"black\"  attach=\"material\" />\n    </mesh>\n  )\n}"]},"metadata":{},"sourceType":"module"}