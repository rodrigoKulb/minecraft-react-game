{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react/src/components/Cube.js\";\nimport React, { memo } from 'react';\nimport { useBox } from 'use-cannon';\nimport { useState } from 'react';\nimport * as textures from '../textures';\n\nconst Cube = ({\n  position,\n  texture,\n  addCube,\n  removeCube\n}) => {\n  const [hover, setHover] = useState(null);\n  const [ref] = useBox(() => ({\n    type: 'Static',\n    position\n  }));\n  const [play] = useSound(boopSfx);\n  const color = texture === 'glass' ? 'skyblue' : 'white';\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: true,\n    ref: ref,\n    onPointerMove: e => {\n      e.stopPropagation();\n      setHover(Math.floor(e.faceIndex / 2));\n    },\n    onPointerOut: () => {\n      setHover(null);\n    },\n    onClick: e => {\n      e.stopPropagation();\n      const clickedFace = Math.floor(e.faceIndex / 2);\n      const {\n        x,\n        y,\n        z\n      } = ref.current.position;\n      play();\n\n      if (clickedFace === 0) {\n        e.altKey ? removeCube(x, y, z) : addCube(x + 1, y, z);\n        return;\n      }\n\n      if (clickedFace === 1) {\n        e.altKey ? removeCube(x, y, z) : addCube(x - 1, y, z);\n        return;\n      }\n\n      if (clickedFace === 2) {\n        e.altKey ? removeCube(x, y, z) : addCube(x, y + 1, z);\n        return;\n      }\n\n      if (clickedFace === 3) {\n        e.altKey ? removeCube(x, y, z) : addCube(x, y - 1, z);\n        return;\n      }\n\n      if (clickedFace === 4) {\n        e.altKey ? removeCube(x, y, z) : addCube(x, y, z + 1);\n        return;\n      }\n\n      if (clickedFace === 5) {\n        e.altKey ? removeCube(x, y, z) : addCube(x, y, z - 1);\n        return;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attachArray: \"material\",\n    map: textures[texture],\n    key: index,\n    color: hover === index ? 'gray' : color,\n    opacity: texture === 'glass' ? 0.7 : 1,\n    transparent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction equalProps(prevProps, nextProps) {\n  const equalPosition = prevProps.position.x === nextProps.position.x && prevProps.position.y === nextProps.position.y && prevProps.position.z === nextProps.position.z;\n  return equalPosition && prevProps.texture === nextProps.texture;\n}\n\nexport default memo(Cube, equalProps);","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react/src/components/Cube.js"],"names":["React","memo","useBox","useState","textures","Cube","position","texture","addCube","removeCube","hover","setHover","ref","type","play","useSound","boopSfx","color","e","stopPropagation","Math","floor","faceIndex","clickedFace","x","y","z","current","altKey","Array","map","_","index","equalProps","prevProps","nextProps","equalPosition"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { useBox } from 'use-cannon';\nimport { useState } from 'react';\nimport * as textures from '../textures';\n\nconst Cube = ({ position, texture, addCube, removeCube }) => {\n  const [hover, setHover] = useState(null);\n\n  const [ref] = useBox(() => ({\n    type: 'Static',\n    position,\n  }));\n  \n  const [play] = useSound(boopSfx);\n\n  const color = texture === 'glass' ? 'skyblue' : 'white';\n  return (\n    <mesh\n      castShadow\n      ref={ref}\n      onPointerMove={(e) => {\n        e.stopPropagation();\n        setHover(Math.floor(e.faceIndex / 2));\n      }}\n      onPointerOut={() => {\n        setHover(null);\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        const clickedFace = Math.floor(e.faceIndex / 2);\n        const { x, y, z } = ref.current.position;\n        play();\n        if (clickedFace === 0) {\n          e.altKey ? removeCube(x, y, z) : addCube(x + 1, y, z);\n          return;\n        }\n        if (clickedFace === 1) {\n          e.altKey ? removeCube(x, y, z) : addCube(x - 1, y, z);\n          return;\n        }\n        if (clickedFace === 2) {\n          e.altKey ? removeCube(x, y, z) : addCube(x, y + 1, z);\n          return;\n        }\n        if (clickedFace === 3) {\n          e.altKey ? removeCube(x, y, z) : addCube(x, y - 1, z);\n          return;\n        }\n        if (clickedFace === 4) {\n          e.altKey ? removeCube(x, y, z) : addCube(x, y, z + 1);\n          return;\n        }\n        if (clickedFace === 5) {\n          e.altKey ? removeCube(x, y, z) : addCube(x, y, z - 1);\n          return;\n        }\n      }}\n    >\n      {[...Array(6)].map((_, index) => (\n        <meshStandardMaterial\n          attachArray=\"material\"\n          map={textures[texture]}\n          key={index}\n          color={hover === index ? 'gray' : color}\n          opacity={texture === 'glass' ? 0.7 : 1}\n          transparent={true}\n        />\n      ))}\n      <boxBufferGeometry attach=\"geometry\" />\n    </mesh>\n  );\n};\n\nfunction equalProps(prevProps, nextProps) {\n  const equalPosition =\n    prevProps.position.x === nextProps.position.x &&\n    prevProps.position.y === nextProps.position.y &&\n    prevProps.position.z === nextProps.position.z;\n\n  return equalPosition && prevProps.texture === nextProps.texture;\n}\n\nexport default memo(Cube, equalProps);\n"]},"metadata":{},"sourceType":"module"}