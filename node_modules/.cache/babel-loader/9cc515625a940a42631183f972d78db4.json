{"ast":null,"code":"import { FrameLoop } from './FrameLoop';\nimport { noop } from './helpers'; //\n// Required\n//\n\nexport var createStringInterpolator;\nexport var frameLoop = new FrameLoop(); //\n// Optional\n//\n\nexport var to;\nexport var now = function () {\n  return performance.now();\n};\nexport var colorNames = null;\nexport var skipAnimation = false;\nexport var requestAnimationFrame = typeof window !== 'undefined' ? window.requestAnimationFrame : function () {\n  return -1;\n};\nexport var batchedUpdates = function (callback) {\n  return callback();\n};\nexport var willAdvance = noop;\nexport var assign = function (globals) {\n  var _a;\n\n  return _a = Object.assign({\n    to: to,\n    now: now,\n    frameLoop: frameLoop,\n    colorNames: colorNames,\n    skipAnimation: skipAnimation,\n    createStringInterpolator: createStringInterpolator,\n    requestAnimationFrame: requestAnimationFrame,\n    batchedUpdates: batchedUpdates,\n    willAdvance: willAdvance\n  }, pluckDefined(globals)), to = _a.to, now = _a.now, frameLoop = _a.frameLoop, colorNames = _a.colorNames, skipAnimation = _a.skipAnimation, createStringInterpolator = _a.createStringInterpolator, requestAnimationFrame = _a.requestAnimationFrame, batchedUpdates = _a.batchedUpdates, willAdvance = _a.willAdvance, _a;\n}; // Ignore undefined values\n\nfunction pluckDefined(globals) {\n  var defined = {};\n\n  for (var key in globals) {\n    if (globals[key] !== undefined) defined[key] = globals[key];\n  }\n\n  return defined;\n}","map":{"version":3,"sources":["../../src/globals.ts"],"names":[],"mappings":"AAIA,SAAS,SAAT,QAA2C,aAA3C;AACA,SAAS,IAAT,QAAqB,WAArB,C,CAEA;AACA;AACA;;AAEA,OAAO,IAAI,wBAAJ;AAIP,OAAO,IAAI,SAAS,GAAG,IAAI,SAAJ,EAAhB,C,CAEP;AACA;AACA;;AAEA,OAAO,IAAI,EAAJ;AAOP,OAAO,IAAI,GAAG,GAAG,YAAA;AAAM,SAAA,WAAW,CAAX,GAAA,EAAA;AAAiB,CAAjC;AAEP,OAAO,IAAI,UAAU,GAAG,IAAjB;AAEP,OAAO,IAAI,aAAa,GAAG,KAApB;AAMP,OAAO,IAAI,qBAAqB,GAC9B,OAAO,MAAP,KAAkB,WAAlB,GAAgC,MAAM,CAAC,qBAAvC,GAA+D,YAAA;AAAM,SAAA,CAAA,CAAA;AAAE,CADlE;AAGP,OAAO,IAAI,cAAc,GAAG,UAAC,QAAD,EAAqB;AAAK,SAAA,QAAA,EAAA;AAAU,CAAzD;AAEP,OAAO,IAAI,WAAW,GAA4C,IAA3D;AA2BP,OAAO,IAAM,MAAM,GAAG,UAAC,OAAD,EAAyB;;;AAC7C,SAAC,EAAA,GAAA,MAAA,CAAA,MAAA,CAAA;UAAA;YAAA;wBAAA;0BAAA;gCAAA;sDAAA;gDAAA;kCAAA;;AAAA,GAAA,E,aAuBA,O,CAvBA,CAAA,EACC,EAAA,GAAA,EAAA,CAAA,EADD,EAEC,GAAA,GAAA,EAAA,CAAA,GAFD,EAGC,SAAA,GAAA,EAAA,CAAA,SAHD,EAIC,UAAA,GAAA,EAAA,CAAA,UAJD,EAKC,aAAA,GAAA,EAAA,CAAA,aALD,EAMC,wBAAA,GAAA,EAAA,CAAA,wBAND,EAOC,qBAAA,GAAA,EAAA,CAAA,qBAPD,EAQC,cAAA,GAAA,EAAA,CAAA,cARD,EASC,WAAA,GAAA,EAAA,CAAA,WATD,EASY,EATb;AAuBE,CAxBG,C,CA0BP;;AACA,SAAS,YAAT,CAAsB,OAAtB,EAAkC;AAChC,MAAM,OAAO,GAAQ,EAArB;;AACA,OAAK,IAAM,GAAX,IAAkB,OAAlB,EAA2B;AACzB,QAAI,OAAO,CAAC,GAAD,CAAP,KAAiB,SAArB,EAAgC,OAAO,CAAC,GAAD,CAAP,GAAe,OAAO,CAAC,GAAD,CAAtB;AACjC;;AACD,SAAO,OAAP;AACD","sourcesContent":["import { FluidValue } from 'fluids'\n\nimport { OneOrMore } from './types.util'\nimport { InterpolatorConfig, InterpolatorArgs } from './types'\nimport { FrameLoop, OpaqueAnimation } from './FrameLoop'\nimport { noop } from './helpers'\n\n//\n// Required\n//\n\nexport let createStringInterpolator: (\n  config: InterpolatorConfig<string>\n) => (input: number) => string\n\nexport let frameLoop = new FrameLoop()\n\n//\n// Optional\n//\n\nexport let to: <In, Out>(\n  source: OneOrMore<FluidValue>,\n  args: InterpolatorArgs<In, Out>\n) => FluidValue<Out>\n\ndeclare const performance: { now: () => number }\n\nexport let now = () => performance.now()\n\nexport let colorNames = null as { [key: string]: number } | null\n\nexport let skipAnimation = false as boolean\n\ndeclare const window: {\n  requestAnimationFrame: (cb: (time: number) => void) => number\n}\n\nexport let requestAnimationFrame: (cb: (time: number) => void) => void =\n  typeof window !== 'undefined' ? window.requestAnimationFrame : () => -1\n\nexport let batchedUpdates = (callback: () => void) => callback()\n\nexport let willAdvance: (animations: OpaqueAnimation[]) => void = noop\n\n//\n// Configuration\n//\n\nexport interface AnimatedGlobals {\n  /** Returns a new `Interpolation` object */\n  to?: typeof to\n  /** Used to measure frame length. Read more [here](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now) */\n  now?: typeof now\n  /** Provide a custom `FrameLoop` instance */\n  frameLoop?: typeof frameLoop\n  /** Provide custom color names for interpolation */\n  colorNames?: typeof colorNames\n  /** Make all animations instant and skip the frameloop entirely */\n  skipAnimation?: typeof skipAnimation\n  /** Provide custom logic for string interpolation */\n  createStringInterpolator?: typeof createStringInterpolator\n  /** Schedule a function to run on the next frame */\n  requestAnimationFrame?: typeof requestAnimationFrame\n  /** Event props are called with `batchedUpdates` to reduce extraneous renders */\n  batchedUpdates?: typeof batchedUpdates\n  /** @internal Exposed for testing purposes */\n  willAdvance?: typeof willAdvance\n}\n\nexport const assign = (globals: AnimatedGlobals): AnimatedGlobals =>\n  ({\n    to,\n    now,\n    frameLoop,\n    colorNames,\n    skipAnimation,\n    createStringInterpolator,\n    requestAnimationFrame,\n    batchedUpdates,\n    willAdvance,\n  } = Object.assign(\n    {\n      to,\n      now,\n      frameLoop,\n      colorNames,\n      skipAnimation,\n      createStringInterpolator,\n      requestAnimationFrame,\n      batchedUpdates,\n      willAdvance,\n    },\n    pluckDefined(globals)\n  ))\n\n// Ignore undefined values\nfunction pluckDefined(globals: any) {\n  const defined: any = {}\n  for (const key in globals) {\n    if (globals[key] !== undefined) defined[key] = globals[key]\n  }\n  return defined\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}