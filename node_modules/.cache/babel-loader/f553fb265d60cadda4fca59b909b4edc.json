{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react-game/src/components/Player.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useSphere } from 'use-cannon';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { FPVControls } from './FPVControls';\nimport { useKeyboardControls } from '../hooks/useKeyboardControls';\nimport { Vector3 } from 'three';\nconst SPEED = 6;\nexport const Player = props => {\n  const {\n    camera\n  } = useThree();\n  const {\n    moveForward,\n    moveBackward,\n    moveLeft,\n    moveRight,\n    jump\n  } = useKeyboardControls();\n  const [ref, api] = useSphere(() => ({\n    mass: 1,\n    type: 'Dynamic',\n    ...props\n  }));\n  const velocity = useRef([0, 0, 0]);\n  useEffect(() => {\n    api.velocity.subscribe(v => velocity.current = v);\n  }, [api.velocity]);\n  let numMao = 0;\n  let movimento = 0;\n\n  function animaMao() {\n    console.log(numMao);\n\n    if (numMao <= -60) {\n      movimento = 10;\n    } else if (numMao >= 0) {\n      movimento = -10;\n    }\n\n    parseFloat(numMao += movimento);\n    document.getElementById(\"mao\").style.bottom = numMao + 'px';\n  }\n\n  useFrame(() => {\n    if (moveBackward || moveForward || moveRight || moveLeft) {\n      animaMao();\n    }\n\n    camera.position.copy(ref.current.position);\n    const direction = new Vector3();\n    const frontVector = new Vector3(0, 0, (moveBackward ? 1 : 0) - (moveForward ? 1 : 0));\n    const sideVector = new Vector3((moveLeft ? 1 : 0) - (moveRight ? 1 : 0), 0, 0);\n    direction.subVectors(frontVector, sideVector).normalize().multiplyScalar(SPEED).applyEuler(camera.rotation);\n    api.velocity.set(direction.x, velocity.current[1], direction.z);\n\n    if (jump && Math.abs(velocity.current[1].toFixed(2)) < 3) {\n      api.velocity.set(velocity.current[0], 8, velocity.current[2]);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FPVControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react-game/src/components/Player.js"],"names":["React","useEffect","useRef","useSphere","useThree","useFrame","FPVControls","useKeyboardControls","Vector3","SPEED","Player","props","camera","moveForward","moveBackward","moveLeft","moveRight","jump","ref","api","mass","type","velocity","subscribe","v","current","numMao","movimento","animaMao","console","log","parseFloat","document","getElementById","style","bottom","position","copy","direction","frontVector","sideVector","subVectors","normalize","multiplyScalar","applyEuler","rotation","set","x","z","Math","abs","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useSphere } from 'use-cannon';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { FPVControls } from './FPVControls';\nimport { useKeyboardControls } from '../hooks/useKeyboardControls';\nimport { Vector3 } from 'three';\n\nconst SPEED = 6;\n\nexport const Player = (props) => {\n  const { camera } = useThree();\n  \n  const {\n    moveForward,\n    moveBackward,\n    moveLeft,\n    moveRight,\n    jump,\n  } = useKeyboardControls();\n  const [ref, api] = useSphere(() => ({\n    mass: 1,\n    type: 'Dynamic',\n    ...props,\n  }));\n\n\n  const velocity = useRef([0, 0, 0]);\n  useEffect(() => {\n    api.velocity.subscribe((v) => (velocity.current = v));\n  }, [api.velocity]);\n\n  let numMao = 0;\nlet movimento = 0;\n\nfunction animaMao()\n{\n  console.log(numMao);\n  if(numMao<=-60)\n  {\n    movimento = 10;\n  }\n  else if(numMao>=0)\n  {\n    movimento = -10;\n  }\n  parseFloat(numMao+=movimento);\n  document.getElementById(\"mao\").style.bottom = numMao+'px';\n}\n\n\n\n  useFrame(() => {\n\n     \n    if(moveBackward ||moveForward || moveRight || moveLeft)\n    {\n      animaMao();\n    }\n\n    camera.position.copy(ref.current.position);\n    const direction = new Vector3();\n\n    const frontVector = new Vector3(\n      0,\n      0,\n      (moveBackward ? 1 : 0) - (moveForward ? 1 : 0),\n    );\n    const sideVector = new Vector3(\n      (moveLeft ? 1 : 0) - (moveRight ? 1 : 0),\n      0,\n      0,\n    );\n\n    direction\n      .subVectors(frontVector, sideVector)\n      .normalize()\n      .multiplyScalar(SPEED)\n      .applyEuler(camera.rotation);\n\n    api.velocity.set(direction.x, velocity.current[1], direction.z);\n\n    if (jump && Math.abs(velocity.current[1].toFixed(2)) < 3) {\n\n      api.velocity.set(velocity.current[0], 8, velocity.current[2]);\n    }\n  });\n  return (\n    <>\n      <FPVControls />\n      <mesh ref={ref} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}