{"ast":null,"code":"import { useReducer, useRef, useEffect, useLayoutEffect } from 'react';\n\nfunction create(createState) {\n  let state;\n  const listeners = new Set();\n\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(listener => listener(state, previousState));\n    }\n  };\n\n  const getState = () => state;\n\n  const subscribeWithSelector = (listener, selector = getState, equalityFn = Object.is) => {\n    let currentSlice = selector(state);\n\n    function listenerToAdd() {\n      const nextSlice = selector(state);\n\n      if (!equalityFn(currentSlice, nextSlice)) {\n        const previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, previousSlice);\n      }\n    }\n\n    listeners.add(listenerToAdd); // Unsubscribe\n\n    return () => listeners.delete(listenerToAdd);\n  };\n\n  const subscribe = (listener, selector, equalityFn) => {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n\n    listeners.add(listener); // Unsubscribe\n\n    return () => listeners.delete(listener);\n  };\n\n  const destroy = () => listeners.clear();\n\n  const api = {\n    setState,\n    getState,\n    subscribe,\n    destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nconst useIsoLayoutEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;\n\nfunction create$1(createState) {\n  const api = typeof createState === 'function' ? create(createState) : createState;\n\n  const useStore = (selector = api.getState, equalityFn = Object.is) => {\n    const [, forceUpdate] = useReducer(c => c + 1, 0);\n    const state = api.getState();\n    const stateRef = useRef(state);\n    const selectorRef = useRef(selector);\n    const equalityFnRef = useRef(equalityFn);\n    const erroredRef = useRef(false);\n    const currentSliceRef = useRef();\n\n    if (currentSliceRef.current === undefined) {\n      currentSliceRef.current = selector(state);\n    }\n\n    let newStateSlice;\n    let hasNewStateSlice = false; // The selector or equalityFn need to be called during the render phase if\n    // they change. We also want legitimate errors to be visible so we re-run\n    // them if they errored in the subscriber.\n\n    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {\n      // Using local variables to avoid mutations in the render phase.\n      newStateSlice = selector(state);\n      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);\n    } // Syncing changes in useEffect.\n\n\n    useIsoLayoutEffect(() => {\n      if (hasNewStateSlice) {\n        currentSliceRef.current = newStateSlice;\n      }\n\n      stateRef.current = state;\n      selectorRef.current = selector;\n      equalityFnRef.current = equalityFn;\n      erroredRef.current = false;\n    });\n    const stateBeforeSubscriptionRef = useRef(state);\n    useIsoLayoutEffect(() => {\n      const listener = () => {\n        try {\n          const nextState = api.getState();\n          const nextStateSlice = selectorRef.current(nextState);\n\n          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {\n            stateRef.current = nextState;\n            currentSliceRef.current = nextStateSlice;\n            forceUpdate();\n          }\n        } catch (error) {\n          erroredRef.current = true;\n          forceUpdate();\n        }\n      };\n\n      const unsubscribe = api.subscribe(listener);\n\n      if (api.getState() !== stateBeforeSubscriptionRef.current) {\n        listener(); // state has changed before subscription\n      }\n\n      return unsubscribe;\n    }, []);\n    return hasNewStateSlice ? newStateSlice : currentSliceRef.current;\n  };\n\n  Object.assign(useStore, api); // For backward compatibility (No TS types for this)\n\n  useStore[Symbol.iterator] = function* () {\n    console.warn('[useStore, api] = create() is deprecated and will be removed in v4');\n    yield useStore;\n    yield api;\n  };\n\n  return useStore;\n}\n\nexport default create$1;","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react/node_modules/zustand/index.js"],"names":["useReducer","useRef","useEffect","useLayoutEffect","create","createState","state","listeners","Set","setState","partial","replace","nextState","previousState","Object","assign","forEach","listener","getState","subscribeWithSelector","selector","equalityFn","is","currentSlice","listenerToAdd","nextSlice","previousSlice","add","delete","subscribe","destroy","clear","api","useIsoLayoutEffect","window","create$1","useStore","forceUpdate","c","stateRef","selectorRef","equalityFnRef","erroredRef","currentSliceRef","current","undefined","newStateSlice","hasNewStateSlice","stateBeforeSubscriptionRef","nextStateSlice","error","unsubscribe","Symbol","iterator","console","warn"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,eAAxC,QAA+D,OAA/D;;AAEA,SAASC,MAAT,CAAgBC,WAAhB,EAA6B;AAC3B,MAAIC,KAAJ;AACA,QAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;AAEA,QAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACrC,UAAMC,SAAS,GAAG,OAAOF,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACJ,KAAD,CAAvC,GAAiDI,OAAnE;;AAEA,QAAIE,SAAS,KAAKN,KAAlB,EAAyB;AACvB,YAAMO,aAAa,GAAGP,KAAtB;AACAA,MAAAA,KAAK,GAAGK,OAAO,GAAGC,SAAH,GAAeE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyBM,SAAzB,CAA9B;AACAL,MAAAA,SAAS,CAACS,OAAV,CAAkBC,QAAQ,IAAIA,QAAQ,CAACX,KAAD,EAAQO,aAAR,CAAtC;AACD;AACF,GARD;;AAUA,QAAMK,QAAQ,GAAG,MAAMZ,KAAvB;;AAEA,QAAMa,qBAAqB,GAAG,CAACF,QAAD,EAAWG,QAAQ,GAAGF,QAAtB,EAAgCG,UAAU,GAAGP,MAAM,CAACQ,EAApD,KAA2D;AACvF,QAAIC,YAAY,GAAGH,QAAQ,CAACd,KAAD,CAA3B;;AAEA,aAASkB,aAAT,GAAyB;AACvB,YAAMC,SAAS,GAAGL,QAAQ,CAACd,KAAD,CAA1B;;AAEA,UAAI,CAACe,UAAU,CAACE,YAAD,EAAeE,SAAf,CAAf,EAA0C;AACxC,cAAMC,aAAa,GAAGH,YAAtB;AACAN,QAAAA,QAAQ,CAACM,YAAY,GAAGE,SAAhB,EAA2BC,aAA3B,CAAR;AACD;AACF;;AAEDnB,IAAAA,SAAS,CAACoB,GAAV,CAAcH,aAAd,EAZuF,CAYzD;;AAE9B,WAAO,MAAMjB,SAAS,CAACqB,MAAV,CAAiBJ,aAAjB,CAAb;AACD,GAfD;;AAiBA,QAAMK,SAAS,GAAG,CAACZ,QAAD,EAAWG,QAAX,EAAqBC,UAArB,KAAoC;AACpD,QAAID,QAAQ,IAAIC,UAAhB,EAA4B;AAC1B,aAAOF,qBAAqB,CAACF,QAAD,EAAWG,QAAX,EAAqBC,UAArB,CAA5B;AACD;;AAEDd,IAAAA,SAAS,CAACoB,GAAV,CAAcV,QAAd,EALoD,CAK3B;;AAEzB,WAAO,MAAMV,SAAS,CAACqB,MAAV,CAAiBX,QAAjB,CAAb;AACD,GARD;;AAUA,QAAMa,OAAO,GAAG,MAAMvB,SAAS,CAACwB,KAAV,EAAtB;;AAEA,QAAMC,GAAG,GAAG;AACVvB,IAAAA,QADU;AAEVS,IAAAA,QAFU;AAGVW,IAAAA,SAHU;AAIVC,IAAAA;AAJU,GAAZ;AAMAxB,EAAAA,KAAK,GAAGD,WAAW,CAACI,QAAD,EAAWS,QAAX,EAAqBc,GAArB,CAAnB;AACA,SAAOA,GAAP;AACD;;AAED,MAAMC,kBAAkB,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgChC,SAAhC,GAA4CC,eAAvE;;AACA,SAASgC,QAAT,CAAkB9B,WAAlB,EAA+B;AAC7B,QAAM2B,GAAG,GAAG,OAAO3B,WAAP,KAAuB,UAAvB,GAAoCD,MAAM,CAACC,WAAD,CAA1C,GAA0DA,WAAtE;;AAEA,QAAM+B,QAAQ,GAAG,CAAChB,QAAQ,GAAGY,GAAG,CAACd,QAAhB,EAA0BG,UAAU,GAAGP,MAAM,CAACQ,EAA9C,KAAqD;AACpE,UAAM,GAAGe,WAAH,IAAkBrC,UAAU,CAACsC,CAAC,IAAIA,CAAC,GAAG,CAAV,EAAa,CAAb,CAAlC;AACA,UAAMhC,KAAK,GAAG0B,GAAG,CAACd,QAAJ,EAAd;AACA,UAAMqB,QAAQ,GAAGtC,MAAM,CAACK,KAAD,CAAvB;AACA,UAAMkC,WAAW,GAAGvC,MAAM,CAACmB,QAAD,CAA1B;AACA,UAAMqB,aAAa,GAAGxC,MAAM,CAACoB,UAAD,CAA5B;AACA,UAAMqB,UAAU,GAAGzC,MAAM,CAAC,KAAD,CAAzB;AACA,UAAM0C,eAAe,GAAG1C,MAAM,EAA9B;;AAEA,QAAI0C,eAAe,CAACC,OAAhB,KAA4BC,SAAhC,EAA2C;AACzCF,MAAAA,eAAe,CAACC,OAAhB,GAA0BxB,QAAQ,CAACd,KAAD,CAAlC;AACD;;AAED,QAAIwC,aAAJ;AACA,QAAIC,gBAAgB,GAAG,KAAvB,CAdoE,CActC;AAC9B;AACA;;AAEA,QAAIR,QAAQ,CAACK,OAAT,KAAqBtC,KAArB,IAA8BkC,WAAW,CAACI,OAAZ,KAAwBxB,QAAtD,IAAkEqB,aAAa,CAACG,OAAd,KAA0BvB,UAA5F,IAA0GqB,UAAU,CAACE,OAAzH,EAAkI;AAChI;AACAE,MAAAA,aAAa,GAAG1B,QAAQ,CAACd,KAAD,CAAxB;AACAyC,MAAAA,gBAAgB,GAAG,CAAC1B,UAAU,CAACsB,eAAe,CAACC,OAAjB,EAA0BE,aAA1B,CAA9B;AACD,KAtBmE,CAsBlE;;;AAGFb,IAAAA,kBAAkB,CAAC,MAAM;AACvB,UAAIc,gBAAJ,EAAsB;AACpBJ,QAAAA,eAAe,CAACC,OAAhB,GAA0BE,aAA1B;AACD;;AAEDP,MAAAA,QAAQ,CAACK,OAAT,GAAmBtC,KAAnB;AACAkC,MAAAA,WAAW,CAACI,OAAZ,GAAsBxB,QAAtB;AACAqB,MAAAA,aAAa,CAACG,OAAd,GAAwBvB,UAAxB;AACAqB,MAAAA,UAAU,CAACE,OAAX,GAAqB,KAArB;AACD,KATiB,CAAlB;AAUA,UAAMI,0BAA0B,GAAG/C,MAAM,CAACK,KAAD,CAAzC;AACA2B,IAAAA,kBAAkB,CAAC,MAAM;AACvB,YAAMhB,QAAQ,GAAG,MAAM;AACrB,YAAI;AACF,gBAAML,SAAS,GAAGoB,GAAG,CAACd,QAAJ,EAAlB;AACA,gBAAM+B,cAAc,GAAGT,WAAW,CAACI,OAAZ,CAAoBhC,SAApB,CAAvB;;AAEA,cAAI,CAAC6B,aAAa,CAACG,OAAd,CAAsBD,eAAe,CAACC,OAAtC,EAA+CK,cAA/C,CAAL,EAAqE;AACnEV,YAAAA,QAAQ,CAACK,OAAT,GAAmBhC,SAAnB;AACA+B,YAAAA,eAAe,CAACC,OAAhB,GAA0BK,cAA1B;AACAZ,YAAAA,WAAW;AACZ;AACF,SATD,CASE,OAAOa,KAAP,EAAc;AACdR,UAAAA,UAAU,CAACE,OAAX,GAAqB,IAArB;AACAP,UAAAA,WAAW;AACZ;AACF,OAdD;;AAgBA,YAAMc,WAAW,GAAGnB,GAAG,CAACH,SAAJ,CAAcZ,QAAd,CAApB;;AAEA,UAAIe,GAAG,CAACd,QAAJ,OAAmB8B,0BAA0B,CAACJ,OAAlD,EAA2D;AACzD3B,QAAAA,QAAQ,GADiD,CAC7C;AACb;;AAED,aAAOkC,WAAP;AACD,KAxBiB,EAwBf,EAxBe,CAAlB;AAyBA,WAAOJ,gBAAgB,GAAGD,aAAH,GAAmBH,eAAe,CAACC,OAA1D;AACD,GA9DD;;AAgEA9B,EAAAA,MAAM,CAACC,MAAP,CAAcqB,QAAd,EAAwBJ,GAAxB,EAnE6B,CAmEC;;AAE9BI,EAAAA,QAAQ,CAACgB,MAAM,CAACC,QAAR,CAAR,GAA4B,aAAa;AACvCC,IAAAA,OAAO,CAACC,IAAR,CAAa,oEAAb;AACA,UAAMnB,QAAN;AACA,UAAMJ,GAAN;AACD,GAJD;;AAMA,SAAOI,QAAP;AACD;;AAED,eAAeD,QAAf","sourcesContent":["import { useReducer, useRef, useEffect, useLayoutEffect } from 'react';\n\nfunction create(createState) {\n  let state;\n  const listeners = new Set();\n\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(listener => listener(state, previousState));\n    }\n  };\n\n  const getState = () => state;\n\n  const subscribeWithSelector = (listener, selector = getState, equalityFn = Object.is) => {\n    let currentSlice = selector(state);\n\n    function listenerToAdd() {\n      const nextSlice = selector(state);\n\n      if (!equalityFn(currentSlice, nextSlice)) {\n        const previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, previousSlice);\n      }\n    }\n\n    listeners.add(listenerToAdd); // Unsubscribe\n\n    return () => listeners.delete(listenerToAdd);\n  };\n\n  const subscribe = (listener, selector, equalityFn) => {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n\n    listeners.add(listener); // Unsubscribe\n\n    return () => listeners.delete(listener);\n  };\n\n  const destroy = () => listeners.clear();\n\n  const api = {\n    setState,\n    getState,\n    subscribe,\n    destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nconst useIsoLayoutEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;\nfunction create$1(createState) {\n  const api = typeof createState === 'function' ? create(createState) : createState;\n\n  const useStore = (selector = api.getState, equalityFn = Object.is) => {\n    const [, forceUpdate] = useReducer(c => c + 1, 0);\n    const state = api.getState();\n    const stateRef = useRef(state);\n    const selectorRef = useRef(selector);\n    const equalityFnRef = useRef(equalityFn);\n    const erroredRef = useRef(false);\n    const currentSliceRef = useRef();\n\n    if (currentSliceRef.current === undefined) {\n      currentSliceRef.current = selector(state);\n    }\n\n    let newStateSlice;\n    let hasNewStateSlice = false; // The selector or equalityFn need to be called during the render phase if\n    // they change. We also want legitimate errors to be visible so we re-run\n    // them if they errored in the subscriber.\n\n    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {\n      // Using local variables to avoid mutations in the render phase.\n      newStateSlice = selector(state);\n      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);\n    } // Syncing changes in useEffect.\n\n\n    useIsoLayoutEffect(() => {\n      if (hasNewStateSlice) {\n        currentSliceRef.current = newStateSlice;\n      }\n\n      stateRef.current = state;\n      selectorRef.current = selector;\n      equalityFnRef.current = equalityFn;\n      erroredRef.current = false;\n    });\n    const stateBeforeSubscriptionRef = useRef(state);\n    useIsoLayoutEffect(() => {\n      const listener = () => {\n        try {\n          const nextState = api.getState();\n          const nextStateSlice = selectorRef.current(nextState);\n\n          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {\n            stateRef.current = nextState;\n            currentSliceRef.current = nextStateSlice;\n            forceUpdate();\n          }\n        } catch (error) {\n          erroredRef.current = true;\n          forceUpdate();\n        }\n      };\n\n      const unsubscribe = api.subscribe(listener);\n\n      if (api.getState() !== stateBeforeSubscriptionRef.current) {\n        listener(); // state has changed before subscription\n      }\n\n      return unsubscribe;\n    }, []);\n    return hasNewStateSlice ? newStateSlice : currentSliceRef.current;\n  };\n\n  Object.assign(useStore, api); // For backward compatibility (No TS types for this)\n\n  useStore[Symbol.iterator] = function* () {\n    console.warn('[useStore, api] = create() is deprecated and will be removed in v4');\n    yield useStore;\n    yield api;\n  };\n\n  return useStore;\n}\n\nexport default create$1;\n"]},"metadata":{},"sourceType":"module"}