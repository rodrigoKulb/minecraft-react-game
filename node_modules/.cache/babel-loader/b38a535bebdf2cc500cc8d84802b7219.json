{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useStore } from './useStore'; //import andarSom from '../audio/andar.wav';\n//import jumpSom from '../audio/jump.wav';\n\nfunction actionByKey(key) {\n  const keys = {\n    KeyW: 'moveForward',\n    KeyS: 'moveBackward',\n    KeyA: 'moveLeft',\n    KeyD: 'moveRight',\n    Space: 'jump'\n  };\n  return keys[key];\n}\n\nfunction textureByKey(key) {\n  const keys = {\n    Digit1: 'dirt',\n    Digit2: 'grass',\n    Digit3: 'glass',\n    Digit4: 'wood',\n    Digit5: 'log',\n    Digit6: 'dirtgrass'\n  };\n  return keys[key];\n}\n\nexport const useKeyboardControls = () => {\n  useEffect(() => {\n    document.getElementsByClassName(\"botoesZerar\")[0].addEventListener('click', () => {\n      window.localStorage.setItem('world', null);\n    });\n  }, []);\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false\n  });\n  const [setTexture] = useStore(state => [state.setTexture]); //const [plaingCount,setPlaingCount] = useState(0);\n  //const [playAndar] = useState(new Audio(andarSom));\n  //const [playJump] = useState(new Audio(jumpSom));\n\n  let plaingCount = [];\n  plaingCount['KeyS'] = 0;\n  plaingCount['KeyA'] = 0;\n  plaingCount['KeyW'] = 0;\n  plaingCount['KeyD'] = 0; //let total = 0;\n\n  useEffect(() => {\n    const teclaKeyDown = e => {//   if(e.code==='Space')  playJump.play();\n      //   plaingCount[e.code] = 1;\n      //   total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n      //   if(total>0){\n      //     playAndar.play();\n      //   }\n      //   for ( var i = 0; i < plaingCount.length; i++ ){\n      //     total += plaingCount[i];\n      //  }\n    };\n\n    const teclaKeyUp = e => {//plaingCount[e.code] = 0;\n      //total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n      //if(total===0){\n      //playAndar.pause();\n      //}\n    };\n\n    document.addEventListener('keydown', teclaKeyDown);\n    document.addEventListener('keyup', teclaKeyUp);\n    return () => {\n      document.removeEventListener('keydown', teclaKeyDown);\n      document.removeEventListener('keyup', teclaKeyUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Movement key\n      if (actionByKey(e.code)) {\n        setMovement(state => ({ ...state,\n          [actionByKey(e.code)]: true\n        }));\n      } // Change texture key\n\n\n      if (textureByKey(e.code)) {\n        setTexture(textureByKey(e.code));\n      }\n    };\n\n    const handleKeyUp = e => {\n      if (actionByKey(e.code)) {\n        setMovement(state => ({ ...state,\n          [actionByKey(e.code)]: false\n        }));\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [setTexture]);\n  return movement;\n};","map":{"version":3,"sources":["/home/rodrigo/Dropbox/Projetos/rodrigoKulb/minecraft-react-game/src/hooks/useKeyboardControls.js"],"names":["useState","useEffect","useStore","actionByKey","key","keys","KeyW","KeyS","KeyA","KeyD","Space","textureByKey","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","useKeyboardControls","document","getElementsByClassName","addEventListener","window","localStorage","setItem","movement","setMovement","moveForward","moveBackward","moveLeft","moveRight","jump","setTexture","state","plaingCount","teclaKeyDown","e","teclaKeyUp","removeEventListener","handleKeyDown","code","handleKeyUp"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useStore } from './useStore';\n//import andarSom from '../audio/andar.wav';\n//import jumpSom from '../audio/jump.wav';\n\n\n\nfunction actionByKey(key) {\n  const keys = {\n    KeyW: 'moveForward',\n    KeyS: 'moveBackward',\n    KeyA: 'moveLeft',\n    KeyD: 'moveRight',\n    Space: 'jump',\n  };\n  return keys[key];\n}\n\n\n\n\nfunction textureByKey(key) {\n  const keys = {\n    Digit1: 'dirt',\n    Digit2: 'grass',\n    Digit3: 'glass',\n    Digit4: 'wood',\n    Digit5: 'log',\n    Digit6: 'dirtgrass',\n  };\n  return keys[key];\n}\nexport const useKeyboardControls = () => {\n\n\n  useEffect(() => {\n    document.getElementsByClassName(\"botoesZerar\").[0].addEventListener('click', () => {\n      window.localStorage.setItem('world',null);\n    });\n  }, []);\n\n\n  const [movement, setMovement] = useState({\n    moveForward: false,\n    moveBackward: false,\n    moveLeft: false,\n    moveRight: false,\n    jump: false,\n  });\n\n  const [setTexture] = useStore((state) => [state.setTexture]);\n  //const [plaingCount,setPlaingCount] = useState(0);\n  //const [playAndar] = useState(new Audio(andarSom));\n  //const [playJump] = useState(new Audio(jumpSom));\n  \n\n  let plaingCount =  [];\n  plaingCount['KeyS'] = 0;\n  plaingCount['KeyA'] = 0;\n  plaingCount['KeyW'] = 0;\n  plaingCount['KeyD'] = 0;\n\n  //let total = 0;\n  useEffect(() => {\n  \n    const teclaKeyDown = (e) => {\n    //   if(e.code==='Space')  playJump.play();\n    //   plaingCount[e.code] = 1;\n    //   total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n\n    //   if(total>0){\n    //     playAndar.play();\n    //   }\n    //   for ( var i = 0; i < plaingCount.length; i++ ){\n    //     total += plaingCount[i];\n \n    //  }\n     }\n    const teclaKeyUp = (e) => {\n      //plaingCount[e.code] = 0;\n      //total =   plaingCount['KeyS']+plaingCount['KeyA']+plaingCount['KeyW']+plaingCount['KeyD'];\n      \n      //if(total===0){\n\n      //playAndar.pause();\n     //}\n    }\n    document.addEventListener('keydown', teclaKeyDown);\n    document.addEventListener('keyup', teclaKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', teclaKeyDown);\n      document.removeEventListener('keyup', teclaKeyUp);\n    };\n  }, []);\n\n\n  useEffect(() => {\n   \n    const handleKeyDown = (e) => {\n     \n      // Movement key\n      if (actionByKey(e.code)) {\n        setMovement((state) => ({\n          ...state,\n          [actionByKey(e.code)]: true,\n        }));\n      }\n      // Change texture key\n      if (textureByKey(e.code)) {\n        setTexture(textureByKey(e.code));\n      }\n    };\n    const handleKeyUp = (e) => {\n      \n      if (actionByKey(e.code)) {\n        setMovement((state) => ({\n          ...state,\n          [actionByKey(e.code)]: false,\n        }));\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [setTexture]);\n\n  return movement;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}